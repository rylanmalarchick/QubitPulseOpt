name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy scipy matplotlib
        pip install qutip>=4.7.0
        pip install sphinx sphinx-rtd-theme sphinx-autodoc-typehints myst-parser
        pip install nbsphinx pandoc

    - name: Check documentation structure
      run: |
        echo "Checking documentation files..."
        ls -la docs/
        if [ -f "docs/conf.py" ]; then
          echo "Sphinx configuration found"
        else
          echo "No Sphinx configuration, checking for markdown docs..."
        fi

    - name: Build Sphinx documentation
      if: hashFiles('docs/conf.py') != ''
      run: |
        cd docs
        make html
      continue-on-error: true

    - name: Validate markdown documentation
      run: |
        echo "Validating markdown files..."
        find docs -name "*.md" -type f -exec echo "Found: {}" \;
        # Check for broken internal links (basic check)
        for file in $(find docs -name "*.md"); do
          echo "Checking $file"
          # Simple validation: file is readable and non-empty
          [ -s "$file" ] && echo "âœ“ $file is valid"
        done

    - name: Upload documentation artifacts
      if: hashFiles('docs/conf.py') != ''
      uses: actions/upload-artifact@v3
      with:
        name: documentation-html
        path: docs/_build/html/
        retention-days: 30

  check-notebooks:
    name: Validate Documentation Notebooks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy scipy matplotlib jupyter nbconvert nbformat
        pip install qutip>=4.7.0

    - name: Check notebook syntax
      run: |
        echo "Checking notebook files for syntax errors..."
        for notebook in notebooks/*.ipynb; do
          if [ -f "$notebook" ]; then
            echo "Validating $notebook"
            python -m nbconvert --to notebook --execute --inplace "$notebook" --ExecutePreprocessor.timeout=300 || echo "Warning: $notebook failed validation"
          fi
        done
      continue-on-error: true
      timeout-minutes: 20

    - name: Generate notebook reports
      run: |
        echo "Notebook validation complete"
        find notebooks -name "*.ipynb" -type f | wc -l
