name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run slow tests nightly at 2 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch:
    inputs:
      run_slow_tests:
        description: "Run slow tests"
        required: false
        default: "false"

jobs:
  test:
    name: Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy scipy matplotlib pytest pytest-cov pytest-xdist pytest-rerunfailures
          pip install qutip>=4.7.0
          pip install -r requirements-dev.txt

      - name: Run tests with coverage
        run: |
          pytest tests/ -v --cov=src --cov-report=xml --cov-report=term --cov-report=html -n auto

      - name: Upload coverage reports to Codecov
        if: matrix.python-version == '3.10'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-py${{ matrix.python-version }}
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage HTML report
        if: matrix.python-version == '3.10'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-py${{ matrix.python-version }}
          path: htmlcov/
          retention-days: 30

  slow-tests:
    name: Slow Tests (Python 3.10)
    runs-on: ubuntu-latest
    # Only run on schedule, manual trigger, or if explicitly requested
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[run-slow]')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy scipy matplotlib pytest pytest-cov pytest-rerunfailures
          pip install qutip>=4.7.0
          pip install -r requirements-dev.txt

      - name: Run slow optimization tests
        run: |
          pytest tests/ -v -m "slow" --cov=src --cov-report=xml --cov-report=term
        timeout-minutes: 60

      - name: Upload slow test coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: slowtests
          name: codecov-slow
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  integration-tests:
    name: Integration Tests (Python 3.10)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy scipy matplotlib pytest pytest-cov pytest-rerunfailures
          pip install qutip>=4.7.0
          pip install -r requirements-dev.txt

      - name: Run integration tests
        if: hashFiles('tests/integration/**/*.py') != ''
        run: |
          pytest tests/integration -v --cov=src --cov-report=xml --cov-report=term
        timeout-minutes: 30

      - name: Upload integration test coverage to Codecov
        if: hashFiles('tests/integration/**/*.py') != ''
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: integration
          name: codecov-integration
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Skip integration tests if not present
        if: hashFiles('tests/integration/**/*.py') == ''
        run: |
          echo "No integration tests found, skipping..."

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test, slow-tests, integration-tests]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Main tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Slow tests: ${{ needs.slow-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Integration tests: ${{ needs.integration-tests.result }}" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.test.result }}" == "failure" ]]; then
            echo "❌ Main tests failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          elif [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "✅ All required tests passed!" >> $GITHUB_STEP_SUMMARY
          fi
