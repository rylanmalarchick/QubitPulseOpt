[tool.black]
# Black code formatter configuration
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | docs/science/auto_generated
)/
'''

[tool.isort]
# isort import sorting configuration
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
split_on_trailing_comma = true

# Import section order
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']
known_first_party = ['src']
known_third_party = ['qutip', 'numpy', 'scipy', 'matplotlib', 'pytest']

# Skip certain files/directories
skip_glob = ['venv/*', '*.egg-info/*', 'build/*', 'dist/*']
skip = ['__pycache__', '.git', '.pytest_cache', '.tox']

# Force imports to be sorted alphabetically within sections
force_alphabetical_sort_within_sections = false
force_sort_within_sections = true

# Handle star imports
force_single_line = false

# Misc settings
lines_after_imports = 2
lines_between_types = 1
atomic = true
float_to_top = false

[tool.pytest.ini_options]
# pytest configuration
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Markers for test categorization
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "deterministic: marks tests as deterministic (should pass consistently)",
    "stochastic: marks tests as stochastic (may have random failures)",
    "statistical: marks tests that validate statistical properties",
    "unit: marks unit tests (fast, isolated)",
    "integration: marks integration tests (slower, multi-component)",
    "flaky: marks tests as flaky (will be retried on failure)",
]

# Add options
addopts = [
    "-ra",  # Show summary of all test outcomes
    "--strict-markers",  # Raise error on unknown markers
    "--strict-config",  # Raise error on config issues
    "--tb=short",  # Shorter traceback format
    "-v",  # Verbose output
]

# Coverage settings (when using pytest-cov)
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/virtualenv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[build-system]
# Build system configuration (for future packaging)
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
# Project metadata (for future PyPI distribution)
name = "qubitpulseopt"
version = "1.0.0"
description = "Optimal pulse engineering for single-qubit gates with quantum control theory"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "QubitPulseOpt Development Team"}
]
keywords = ["quantum", "control", "optimization", "qutip", "grape", "pulse-engineering"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "qutip>=4.8.0",
    "numpy>=1.24",
    "scipy>=1.10",
    "matplotlib>=3.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3",
    "pytest-cov>=4.1",
    "pytest-rerunfailures>=12.0",
    "black>=24.1",
    "flake8>=7.0",
    "isort>=5.13",
    "pre-commit>=3.5",
    "flake8-docstrings",
    "flake8-bugbear",
]
notebooks = [
    "jupyter>=1.0",
    "ipykernel",
]
docs = [
    "sphinx>=7.0",
    "sphinx-rtd-theme",
]

[project.urls]
Homepage = "https://github.com/YOUR_USERNAME/QubitPulseOpt"
Documentation = "https://qubitpulseopt.readthedocs.io"
Repository = "https://github.com/YOUR_USERNAME/QubitPulseOpt"
Issues = "https://github.com/YOUR_USERNAME/QubitPulseOpt/issues"
