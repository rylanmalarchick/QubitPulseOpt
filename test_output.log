============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-8.4.2, pluggy-1.6.0 -- /home/rylan/Documents/research/quantumComputing/QubitPulseOpt/QubitPulseOpt/venv/bin/python
cachedir: .pytest_cache
rootdir: /home/rylan/Documents/research/quantumComputing/QubitPulseOpt/QubitPulseOpt
configfile: pytest.ini
plugins: anyio-4.11.0, cov-7.0.0
collecting ... collected 635 items

tests/unit/test_adiabatic.py::TestLandauZenerParameters::test_valid_parameters PASSED [  0%]
tests/unit/test_adiabatic.py::TestLandauZenerParameters::test_invalid_sweep_time PASSED [  0%]
tests/unit/test_adiabatic.py::TestLandauZenerParameters::test_invalid_coupling PASSED [  0%]
tests/unit/test_adiabatic.py::TestLandauZenerParameters::test_invalid_sweep_function PASSED [  0%]
tests/unit/test_adiabatic.py::TestSTIRAPParameters::test_valid_parameters PASSED [  0%]
tests/unit/test_adiabatic.py::TestSTIRAPParameters::test_invalid_omega_pump PASSED [  0%]
tests/unit/test_adiabatic.py::TestSTIRAPParameters::test_invalid_omega_stokes PASSED [  1%]
tests/unit/test_adiabatic.py::TestSTIRAPParameters::test_invalid_pulse_shape PASSED [  1%]
tests/unit/test_adiabatic.py::TestLandauZenerSweep::test_linear_detuning PASSED [  1%]
tests/unit/test_adiabatic.py::TestLandauZenerSweep::test_tanh_detuning PASSED [  1%]
tests/unit/test_adiabatic.py::TestLandauZenerSweep::test_gaussian_detuning PASSED [  1%]
tests/unit/test_adiabatic.py::TestLandauZenerSweep::test_linear_detuning_rate PASSED [  1%]
tests/unit/test_adiabatic.py::TestLandauZenerSweep::test_energy_gap PASSED [  2%]
tests/unit/test_adiabatic.py::TestLandauZenerSweep::test_landau_zener_probability PASSED [  2%]
tests/unit/test_adiabatic.py::TestLandauZenerSweep::test_adiabaticity_parameter PASSED [  2%]
tests/unit/test_adiabatic.py::TestLandauZenerSweep::test_check_adiabaticity PASSED [  2%]
tests/unit/test_adiabatic.py::TestLandauZenerSweep::test_simulate PASSED [  2%]
tests/unit/test_adiabatic.py::TestSTIRAPulse::test_pulse_envelope_gaussian PASSED [  2%]
tests/unit/test_adiabatic.py::TestSTIRAPulse::test_pulse_envelope_sech PASSED [  2%]
tests/unit/test_adiabatic.py::TestSTIRAPulse::test_counter_intuitive_ordering PASSED [  3%]
tests/unit/test_adiabatic.py::TestSTIRAPulse::test_mixing_angle PASSED   [  3%]
tests/unit/test_adiabatic.py::TestSTIRAPulse::test_dark_state PASSED     [  3%]
tests/unit/test_adiabatic.py::TestSTIRAPulse::test_adiabaticity_parameter PASSED [  3%]
tests/unit/test_adiabatic.py::TestSTIRAPulse::test_check_adiabaticity PASSED [  3%]
tests/unit/test_adiabatic.py::TestSTIRAPulse::test_simulate PASSED       [  3%]
tests/unit/test_adiabatic.py::TestSTIRAPulse::test_simulate_with_loss PASSED [  4%]
tests/unit/test_adiabatic.py::TestSTIRAPulse::test_transfer_efficiency PASSED [  4%]
tests/unit/test_adiabatic.py::TestAdiabaticChecker::test_instantaneous_eigensystem PASSED [  4%]
tests/unit/test_adiabatic.py::TestAdiabaticChecker::test_adiabatic_condition_static PASSED [  4%]
tests/unit/test_adiabatic.py::TestAdiabaticChecker::test_adiabatic_condition_time_varying PASSED [  4%]
tests/unit/test_adiabatic.py::TestAdiabaticChecker::test_optimize_sweep_time PASSED [  4%]
tests/unit/test_adiabatic.py::TestConvenienceFunctions::test_create_landau_zener_sweep PASSED [  5%]
tests/unit/test_adiabatic.py::TestConvenienceFunctions::test_create_stirap_pulse PASSED [  5%]
tests/unit/test_adiabatic.py::TestEdgeCases::test_zero_coupling_landau_zener PASSED [  5%]
tests/unit/test_adiabatic.py::TestEdgeCases::test_very_slow_stirap PASSED [  5%]
tests/unit/test_adiabatic.py::TestEdgeCases::test_very_fast_stirap PASSED [  5%]
tests/unit/test_adiabatic.py::TestIntegration::test_stirap_vs_landau_zener_concepts PASSED [  5%]
tests/unit/test_adiabatic.py::TestIntegration::test_adiabaticity_scaling PASSED [  5%]
tests/unit/test_benchmarking.py::TestCliffordGroup::test_initialization PASSED [  6%]
tests/unit/test_benchmarking.py::TestCliffordGroup::test_pauli_operators PASSED [  6%]
tests/unit/test_benchmarking.py::TestCliffordGroup::test_clifford_generators PASSED [  6%]
tests/unit/test_benchmarking.py::TestCliffordGroup::test_all_cliffords_are_unitary PASSED [  6%]
tests/unit/test_benchmarking.py::TestCliffordGroup::test_get_random_clifford PASSED [  6%]
tests/unit/test_benchmarking.py::TestCliffordGroup::test_get_clifford_by_index PASSED [  6%]
tests/unit/test_benchmarking.py::TestCliffordGroup::test_invalid_clifford_index PASSED [  7%]
tests/unit/test_benchmarking.py::TestCliffordGroup::test_find_inverse PASSED [  7%]
tests/unit/test_benchmarking.py::TestCliffordGroup::test_compose_cliffords PASSED [  7%]
tests/unit/test_benchmarking.py::TestCliffordGroup::test_clifford_closure FAILED [  7%]
tests/unit/test_benchmarking.py::TestRBSequenceGenerator::test_initialization PASSED [  7%]
tests/unit/test_benchmarking.py::TestRBSequenceGenerator::test_generate_sequence_basic PASSED [  7%]
tests/unit/test_benchmarking.py::TestRBSequenceGenerator::test_sequence_implements_identity PASSED [  8%]
tests/unit/test_benchmarking.py::TestRBSequenceGenerator::test_generate_sequence_no_recovery PASSED [  8%]
tests/unit/test_benchmarking.py::TestRBSequenceGenerator::test_generate_rb_sequences PASSED [  8%]
tests/unit/test_benchmarking.py::TestRBSequenceGenerator::test_zero_length_sequence PASSED [  8%]
tests/unit/test_benchmarking.py::TestRBSequenceGenerator::test_invalid_length PASSED [  8%]
tests/unit/test_benchmarking.py::TestRBExperiment::test_initialization PASSED [  8%]
tests/unit/test_benchmarking.py::TestRBExperiment::test_simulate_sequence_ideal PASSED [  8%]
tests/unit/test_benchmarking.py::TestRBExperiment::test_simulate_sequence_with_noise PASSED [  9%]
tests/unit/test_benchmarking.py::TestRBExperiment::test_run_rb_experiment_ideal FAILED [  9%]
tests/unit/test_benchmarking.py::TestRBExperiment::test_run_rb_experiment_with_noise PASSED [  9%]
tests/unit/test_benchmarking.py::TestRBExperiment::test_fit_rb_decay PASSED [  9%]
tests/unit/test_benchmarking.py::TestRBExperiment::test_rb_result_attributes FAILED [  9%]
tests/unit/test_benchmarking.py::TestInterleavedRB::test_initialization PASSED [  9%]
tests/unit/test_benchmarking.py::TestInterleavedRB::test_generate_interleaved_sequence PASSED [ 10%]
tests/unit/test_benchmarking.py::TestInterleavedRB::test_interleaved_sequence_identity PASSED [ 10%]
tests/unit/test_benchmarking.py::TestInterleavedRB::test_run_interleaved_rb FAILED [ 10%]
tests/unit/test_benchmarking.py::TestInterleavedRB::test_interleaved_rb_with_noise FAILED [ 10%]
tests/unit/test_benchmarking.py::TestNoiseModels::test_depolarizing_noise_zero_rate PASSED [ 10%]
tests/unit/test_benchmarking.py::TestNoiseModels::test_depolarizing_noise_nonzero_rate PASSED [ 10%]
tests/unit/test_benchmarking.py::TestNoiseModels::test_amplitude_damping_noise PASSED [ 11%]
tests/unit/test_benchmarking.py::TestVisualization::test_visualize_rb_decay_basic PASSED [ 11%]
tests/unit/test_benchmarking.py::TestVisualization::test_visualize_rb_decay_no_fit FAILED [ 11%]
tests/unit/test_benchmarking.py::TestIntegration::test_full_rb_pipeline PASSED [ 11%]
tests/unit/test_benchmarking.py::TestIntegration::test_compare_standard_vs_interleaved PASSED [ 11%]
tests/unit/test_benchmarking.py::TestIntegration::test_rb_with_multiple_noise_levels FAILED [ 11%]
tests/unit/test_benchmarking.py::TestEdgeCases::test_single_gate_sequence PASSED [ 11%]
tests/unit/test_benchmarking.py::TestEdgeCases::test_very_long_sequence PASSED [ 12%]
tests/unit/test_benchmarking.py::TestEdgeCases::test_rb_with_short_sequences_only FAILED [ 12%]
tests/unit/test_benchmarking.py::TestEdgeCases::test_rb_result_repr PASSED [ 12%]
tests/unit/test_bloch_animation.py::TestAnimationStyle::test_default_style PASSED [ 12%]
tests/unit/test_bloch_animation.py::TestAnimationStyle::test_custom_style PASSED [ 12%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_initialization_single_trajectory PASSED [ 12%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_initialization_multiple_trajectories PASSED [ 13%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_initialization_with_labels PASSED [ 13%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_initialization_with_style PASSED [ 13%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_state_to_bloch_basis_states PASSED [ 13%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_state_to_bloch_superposition PASSED [ 13%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_bloch_trajectories_conversion PASSED [ 13%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_create_animation_basic PASSED [ 14%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_create_animation_with_trail PASSED [ 14%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_create_animation_without_trail PASSED [ 14%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_create_animation_multiple_trajectories PASSED [ 14%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_update_frame PASSED [ 14%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_save_gif PASSED [ 14%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_save_without_animation_raises PASSED [ 14%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_close PASSED [ 15%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_show_without_animation_raises PASSED [ 15%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_rabi_oscillation_trajectory PASSED [ 15%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_rotation_around_x PASSED [ 15%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_custom_figsize PASSED [ 15%]
tests/unit/test_bloch_animation.py::TestBlochAnimator::test_different_trajectory_lengths_warning PASSED [ 15%]
tests/unit/test_bloch_animation.py::TestCreateBlochAnimation::test_basic_creation PASSED [ 16%]
tests/unit/test_bloch_animation.py::TestCreateBlochAnimation::test_with_labels PASSED [ 16%]
tests/unit/test_bloch_animation.py::TestCreateBlochAnimation::test_with_save PASSED [ 16%]
tests/unit/test_bloch_animation.py::TestCreateBlochAnimation::test_with_custom_style PASSED [ 16%]
tests/unit/test_bloch_animation.py::TestCreateBlochAnimation::test_with_trail_length PASSED [ 16%]
tests/unit/test_bloch_animation.py::TestSaveAnimation::test_save_existing_animation PASSED [ 16%]
tests/unit/test_bloch_animation.py::TestAnimatePulseEvolution::test_basic_pulse_evolution SKIPPED [ 17%]
tests/unit/test_bloch_animation.py::TestAnimatePulseEvolution::test_constant_pulse SKIPPED [ 17%]
tests/unit/test_bloch_animation.py::TestIntegration::test_full_animation_workflow PASSED [ 17%]
tests/unit/test_bloch_animation.py::TestIntegration::test_multiple_trajectories_comparison PASSED [ 17%]
tests/unit/test_bloch_animation.py::TestIntegration::test_animation_with_data_export PASSED [ 17%]
tests/unit/test_compilation.py::TestGateCompilerInitialization::test_basic_initialization PASSED [ 17%]
tests/unit/test_compilation.py::TestGateCompilerInitialization::test_custom_gate_time PASSED [ 17%]
tests/unit/test_compilation.py::TestGateCompilerInitialization::test_custom_gate_spacing PASSED [ 18%]
tests/unit/test_compilation.py::TestGateCompilerInitialization::test_custom_method PASSED [ 18%]
tests/unit/test_compilation.py::TestSequentialCompilation::test_single_gate_compilation PASSED [ 18%]
tests/unit/test_compilation.py::TestSequentialCompilation::test_two_gate_compilation PASSED [ 18%]
tests/unit/test_compilation.py::TestSequentialCompilation::test_multiple_gate_compilation PASSED [ 18%]
tests/unit/test_compilation.py::TestSequentialCompilation::test_sequential_fidelity_product PASSED [ 18%]
tests/unit/test_compilation.py::TestSequentialCompilation::test_sequential_with_custom_gate_times PASSED [ 19%]
tests/unit/test_compilation.py::TestSequentialCompilation::test_sequential_with_gate_spacing PASSED [ 19%]
tests/unit/test_compilation.py::TestSequentialCompilation::test_sequential_identity_gate PASSED [ 19%]
tests/unit/test_compilation.py::TestSequentialCompilation::test_sequential_pauli_gates PASSED [ 19%]
tests/unit/test_compilation.py::TestJointCompilation::test_joint_compilation_basic PASSED [ 19%]
tests/unit/test_compilation.py::TestJointCompilation::test_joint_target_unitary_correct PASSED [ 19%]
tests/unit/test_compilation.py::TestJointCompilation::test_joint_with_custom_gate_times PASSED [ 20%]
tests/unit/test_compilation.py::TestJointCompilation::test_joint_multiple_gates PASSED [ 20%]
tests/unit/test_compilation.py::TestHybridCompilation::test_hybrid_compilation_basic PASSED [ 20%]
tests/unit/test_compilation.py::TestHybridCompilation::test_hybrid_includes_sequential_fidelity PASSED [ 20%]
tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_identity PASSED [ 20%]
tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_hadamard FAILED [ 20%]
tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_pauli_x PASSED [ 20%]
tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_s_gate FAILED [ 21%]
tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_t_gate FAILED [ 21%]
tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_arbitrary_unitary FAILED [ 21%]
tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_with_gate_sequence PASSED [ 21%]
tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_invalid_dimension PASSED [ 21%]
tests/unit/test_compilation.py::TestEulerDecomposition::test_euler_decomposition_repr PASSED [ 21%]
tests/unit/test_compilation.py::TestPulseConcatenation::test_concatenate_two_pulses PASSED [ 22%]
tests/unit/test_compilation.py::TestPulseConcatenation::test_concatenate_multiple_pulses PASSED [ 22%]
tests/unit/test_compilation.py::TestPulseConcatenation::test_concatenate_with_spacing PASSED [ 22%]
tests/unit/test_compilation.py::TestPulseConcatenation::test_concatenate_empty_list_error PASSED [ 22%]
tests/unit/test_compilation.py::TestPulseConcatenation::test_concatenate_mismatched_controls_error PASSED [ 22%]
tests/unit/test_compilation.py::TestCompilationOverhead::test_overhead_estimation_basic PASSED [ 22%]
tests/unit/test_compilation.py::TestCompilationOverhead::test_overhead_multiple_methods PASSED [ 22%]
tests/unit/test_compilation.py::TestCompilationOverhead::test_overhead_default_methods PASSED [ 23%]
tests/unit/test_compilation.py::TestCompiledCircuitDataclass::test_compiled_circuit_creation PASSED [ 23%]
tests/unit/test_compilation.py::TestCompiledCircuitDataclass::test_compiled_circuit_repr PASSED [ 23%]
tests/unit/test_compilation.py::TestCompiledCircuitDataclass::test_compiled_circuit_with_metadata PASSED [ 23%]
tests/unit/test_compilation.py::TestEdgeCasesAndErrors::test_invalid_compilation_method PASSED [ 23%]
tests/unit/test_compilation.py::TestEdgeCasesAndErrors::test_invalid_gate_name PASSED [ 23%]
tests/unit/test_compilation.py::TestEdgeCasesAndErrors::test_mismatched_gate_times_length PASSED [ 24%]
tests/unit/test_compilation.py::TestEdgeCasesAndErrors::test_empty_gate_sequence PASSED [ 24%]
tests/unit/test_compilation.py::TestEdgeCasesAndErrors::test_single_gate_time_for_multiple_gates PASSED [ 24%]
tests/unit/test_compilation.py::TestGateCache::test_cache_stores_gates PASSED [ 24%]
tests/unit/test_compilation.py::TestGateCache::test_cache_reuses_gates PASSED [ 24%]
tests/unit/test_composite.py::TestPulseSegment::test_valid_segment PASSED [ 24%]
tests/unit/test_composite.py::TestPulseSegment::test_segment_with_duration PASSED [ 25%]
tests/unit/test_composite.py::TestPulseSegment::test_axis_from_string PASSED [ 25%]
tests/unit/test_composite.py::TestPulseSegment::test_invalid_axis PASSED [ 25%]
tests/unit/test_composite.py::TestCompositeSequence::test_valid_sequence PASSED [ 25%]
tests/unit/test_composite.py::TestBB1Sequences::test_bb1_xgate_structure PASSED [ 25%]
tests/unit/test_composite.py::TestBB1Sequences::test_bb1_xgate_angles PASSED [ 25%]
tests/unit/test_composite.py::TestBB1Sequences::test_bb1_xgate_axes PASSED [ 25%]
tests/unit/test_composite.py::TestBB1Sequences::test_bb1_ygate_structure PASSED [ 26%]
tests/unit/test_composite.py::TestBB1Sequences::test_bb1_implements_target_gate PASSED [ 26%]
tests/unit/test_composite.py::TestCORPSESequences::test_corpse_xgate_structure PASSED [ 26%]
tests/unit/test_composite.py::TestCORPSESequences::test_corpse_xgate_angles PASSED [ 26%]
tests/unit/test_composite.py::TestCORPSESequences::test_corpse_custom_theta PASSED [ 26%]
tests/unit/test_composite.py::TestCORPSESequences::test_short_corpse_structure PASSED [ 26%]
tests/unit/test_composite.py::TestCORPSESequences::test_corpse_implements_target_gate PASSED [ 27%]
tests/unit/test_composite.py::TestSK1Sequence::test_sk1_identity PASSED  [ 27%]
tests/unit/test_composite.py::TestSK1Sequence::test_sk1_hadamard PASSED  [ 27%]
tests/unit/test_composite.py::TestCustomSequences::test_knill_sequence_structure PASSED [ 27%]
tests/unit/test_composite.py::TestCustomSequences::test_arbitrary_rotation PASSED [ 27%]
tests/unit/test_composite.py::TestErrorRobustness::test_bb1_detuning_robustness PASSED [ 27%]
tests/unit/test_composite.py::TestErrorRobustness::test_corpse_amplitude_robustness PASSED [ 28%]
tests/unit/test_composite.py::TestErrorRobustness::test_sweep_detuning PASSED [ 28%]
tests/unit/test_composite.py::TestErrorRobustness::test_sweep_amplitude_error PASSED [ 28%]
tests/unit/test_composite.py::TestErrorRobustness::test_robustness_radius_detuning PASSED [ 28%]
tests/unit/test_composite.py::TestErrorRobustness::test_robustness_radius_amplitude PASSED [ 28%]
tests/unit/test_composite.py::TestSequenceComparison::test_compare_sequences_detuning PASSED [ 28%]
tests/unit/test_composite.py::TestSequenceComparison::test_compare_sequences_amplitude PASSED [ 28%]
tests/unit/test_composite.py::TestUtilityMethods::test_total_duration PASSED [ 29%]
tests/unit/test_composite.py::TestUtilityMethods::test_total_rotation_angle PASSED [ 29%]
tests/unit/test_composite.py::TestUtilityMethods::test_total_rotation_corpse PASSED [ 29%]
tests/unit/test_composite.py::TestSequenceToGate::test_simulate_sequence_no_errors PASSED [ 29%]
tests/unit/test_composite.py::TestSequenceToGate::test_simulate_sequence_with_detuning PASSED [ 29%]
tests/unit/test_composite.py::TestSequenceToGate::test_simulate_sequence_with_amplitude_error PASSED [ 29%]
tests/unit/test_composite.py::TestGateFidelity::test_gate_fidelity_perfect PASSED [ 30%]
tests/unit/test_composite.py::TestGateFidelity::test_gate_fidelity_with_errors PASSED [ 30%]
tests/unit/test_composite.py::TestGateFidelity::test_gate_fidelity_custom_target PASSED [ 30%]
tests/unit/test_composite.py::TestSequenceToPulses::test_sequence_to_pulses_simple PASSED [ 30%]
tests/unit/test_composite.py::TestSequenceToPulses::test_sequence_to_pulses_xy PASSED [ 30%]
tests/unit/test_composite.py::TestEdgeCases::test_negative_rotation_angles PASSED [ 30%]
tests/unit/test_composite.py::TestEdgeCases::test_zero_angle_segment PASSED [ 31%]
tests/unit/test_composite.py::TestEdgeCases::test_very_large_detuning PASSED [ 31%]
tests/unit/test_composite.py::TestEdgeCases::test_unknown_gate_name PASSED [ 31%]
tests/unit/test_composite.py::TestRealWorldScenarios::test_typical_detuning_drift PASSED [ 31%]
tests/unit/test_composite.py::TestRealWorldScenarios::test_typical_amplitude_calibration_error PASSED [ 31%]
tests/unit/test_control.py::TestControlHamiltonianConstruction::test_control_hamiltonian_creation PASSED [ 31%]
tests/unit/test_control.py::TestControlHamiltonianConstruction::test_control_hamiltonian_drive_axes PASSED [ 31%]
tests/unit/test_control.py::TestControlHamiltonianConstruction::test_control_hamiltonian_invalid_axis PASSED [ 32%]
tests/unit/test_control.py::TestControlHamiltonianConstruction::test_control_hamiltonian_phase PASSED [ 32%]
tests/unit/test_control.py::TestControlHamiltonianConstruction::test_control_hamiltonian_detuning PASSED [ 32%]
tests/unit/test_control.py::TestControlHamiltonianConstruction::test_control_hamiltonian_repr PASSED [ 32%]
tests/unit/test_control.py::TestControlHamiltonianOperators::test_hamiltonian_at_time_x_axis PASSED [ 32%]
tests/unit/test_control.py::TestControlHamiltonianOperators::test_hamiltonian_at_time_y_axis PASSED [ 32%]
tests/unit/test_control.py::TestControlHamiltonianOperators::test_hamiltonian_time_dependence PASSED [ 33%]
tests/unit/test_control.py::TestControlHamiltonianOperators::test_hamiltonian_hermiticity PASSED [ 33%]
tests/unit/test_control.py::TestControlHamiltonianOperators::test_hamiltonian_coeff_form PASSED [ 33%]
tests/unit/test_control.py::TestRabiOscillations::test_rabi_oscillations_pi_pulse PASSED [ 33%]
tests/unit/test_control.py::TestRabiOscillations::test_rabi_oscillations_pi_half_pulse PASSED [ 33%]
tests/unit/test_control.py::TestRabiOscillations::test_rabi_oscillations_periodicity PASSED [ 33%]
tests/unit/test_control.py::TestRabiOscillations::test_rabi_frequency_calculation PASSED [ 34%]
tests/unit/test_control.py::TestRabiOscillations::test_pi_pulse_duration_helper PASSED [ 34%]
tests/unit/test_control.py::TestRabiOscillations::test_pi_half_pulse_duration_helper PASSED [ 34%]
tests/unit/test_control.py::TestShapedPulses::test_gaussian_pi_pulse PASSED [ 34%]
tests/unit/test_control.py::TestShapedPulses::test_square_pulse_vs_gaussian PASSED [ 34%]
tests/unit/test_control.py::TestShapedPulses::test_drag_pulse_evolution PASSED [ 34%]
tests/unit/test_control.py::TestDetuning::test_zero_detuning_on_resonance PASSED [ 34%]
tests/unit/test_control.py::TestDetuning::test_positive_detuning_slow_oscillations PASSED [ 35%]
tests/unit/test_control.py::TestDetuning::test_large_detuning_incomplete_transfer PASSED [ 35%]
tests/unit/test_control.py::TestDetuning::test_effective_rabi_frequency_with_detuning PASSED [ 35%]
tests/unit/test_control.py::TestGateFidelity::test_gate_fidelity_perfect_pi_pulse PASSED [ 35%]
tests/unit/test_control.py::TestGateFidelity::test_gate_fidelity_wrong_duration PASSED [ 35%]
tests/unit/test_control.py::TestGateFidelity::test_gate_fidelity_with_drift PASSED [ 35%]
tests/unit/test_control.py::TestPhaseControl::test_phase_zero_x_axis PASSED [ 36%]
tests/unit/test_control.py::TestPhaseControl::test_phase_pi_half_y_axis PASSED [ 36%]
tests/unit/test_control.py::TestPhaseControl::test_arbitrary_phase_superposition PASSED [ 36%]
tests/unit/test_control.py::TestEdgeCases::test_zero_amplitude_pulse PASSED [ 36%]
tests/unit/test_control.py::TestEdgeCases::test_negative_amplitude_pulse PASSED [ 36%]
tests/unit/test_control.py::TestEdgeCases::test_very_fast_pulse PASSED   [ 36%]
tests/unit/test_control.py::TestEdgeCases::test_array_time_evaluation PASSED [ 37%]
tests/unit/test_dashboard.py::TestOptimizationMetrics::test_creation PASSED [ 37%]
tests/unit/test_dashboard.py::TestOptimizationMetrics::test_with_custom_metrics PASSED [ 37%]
tests/unit/test_dashboard.py::TestOptimizationDashboard::test_initialization PASSED [ 37%]
tests/unit/test_dashboard.py::TestOptimizationDashboard::test_single_update PASSED [ 37%]
tests/unit/test_dashboard.py::TestOptimizationDashboard::test_multiple_updates PASSED [ 37%]
tests/unit/test_dashboard.py::TestOptimizationDashboard::test_infidelity_computation PASSED [ 37%]
tests/unit/test_dashboard.py::TestOptimizationDashboard::test_custom_metrics PASSED [ 38%]
tests/unit/test_dashboard.py::TestOptimizationDashboard::test_export_data PASSED [ 38%]
tests/unit/test_dashboard.py::TestOptimizationDashboard::test_save PASSED [ 38%]
tests/unit/test_dashboard.py::TestOptimizationDashboard::test_close PASSED [ 38%]
tests/unit/test_dashboard.py::TestOptimizationDashboard::test_2d_controls PASSED [ 38%]
tests/unit/test_dashboard.py::TestOptimizationDashboard::test_1d_controls PASSED [ 38%]
tests/unit/test_dashboard.py::TestParameterSweepViewer::test_initialization PASSED [ 39%]
tests/unit/test_dashboard.py::TestParameterSweepViewer::test_plot_heatmap PASSED [ 39%]
tests/unit/test_dashboard.py::TestParameterSweepViewer::test_plot_heatmap_with_limits PASSED [ 39%]
tests/unit/test_dashboard.py::TestParameterSweepViewer::test_plot_3d_surface PASSED [ 39%]
tests/unit/test_dashboard.py::TestParameterSweepViewer::test_different_array_sizes PASSED [ 39%]
tests/unit/test_dashboard.py::TestPulseComparisonViewer::test_initialization PASSED [ 39%]
tests/unit/test_dashboard.py::TestPulseComparisonViewer::test_compare_two_pulses PASSED [ 40%]
tests/unit/test_dashboard.py::TestPulseComparisonViewer::test_compare_with_metrics PASSED [ 40%]
tests/unit/test_dashboard.py::TestPulseComparisonViewer::test_compare_with_custom_times PASSED [ 40%]
tests/unit/test_dashboard.py::TestPulseComparisonViewer::test_compare_multiple_pulses PASSED [ 40%]
tests/unit/test_dashboard.py::TestPulseComparisonViewer::test_compare_different_lengths PASSED [ 40%]
tests/unit/test_dashboard.py::TestBlochViewer3D::test_initialization PASSED [ 40%]
tests/unit/test_dashboard.py::TestBlochViewer3D::test_state_to_bloch_basis_states PASSED [ 40%]
tests/unit/test_dashboard.py::TestBlochViewer3D::test_state_to_bloch_superposition PASSED [ 41%]
tests/unit/test_dashboard.py::TestBlochViewer3D::test_plot_single_state PASSED [ 41%]
tests/unit/test_dashboard.py::TestBlochViewer3D::test_plot_multiple_states PASSED [ 41%]
tests/unit/test_dashboard.py::TestBlochViewer3D::test_plot_without_sphere PASSED [ 41%]
tests/unit/test_dashboard.py::TestBlochViewer3D::test_plot_trajectory PASSED [ 41%]
tests/unit/test_dashboard.py::TestBlochViewer3D::test_plot_trajectory_custom_colormap PASSED [ 41%]
tests/unit/test_dashboard.py::TestBlochViewer3D::test_draw_bloch_sphere PASSED [ 42%]
tests/unit/test_dashboard.py::TestBlochViewer3D::test_empty_states_list PASSED [ 42%]
tests/unit/test_dashboard.py::TestIntegration::test_dashboard_with_pulse_comparison PASSED [ 42%]
tests/unit/test_dashboard.py::TestIntegration::test_parameter_sweep_with_bloch PASSED [ 42%]
tests/unit/test_drag.py::TestDRAGParameters::test_valid_parameters PASSED [ 42%]
tests/unit/test_drag.py::TestDRAGParameters::test_with_anharmonicity PASSED [ 42%]
tests/unit/test_drag.py::TestDRAGParameters::test_invalid_amplitude PASSED [ 42%]
tests/unit/test_drag.py::TestDRAGParameters::test_invalid_sigma PASSED   [ 43%]
tests/unit/test_drag.py::TestDRAGParameters::test_invalid_truncation PASSED [ 43%]
tests/unit/test_drag.py::TestDRAGEnvelope::test_basic_envelope PASSED    [ 43%]
tests/unit/test_drag.py::TestDRAGEnvelope::test_zero_beta_gives_zero_q PASSED [ 43%]
tests/unit/test_drag.py::TestDRAGEnvelope::test_truncation_effect PASSED [ 43%]
tests/unit/test_drag.py::TestDRAGEnvelope::test_different_centers PASSED [ 43%]
tests/unit/test_drag.py::TestDerivativeAccuracy::test_derivative_matches_numerical PASSED [ 44%]
tests/unit/test_drag.py::TestDerivativeAccuracy::test_derivative_check_method PASSED [ 44%]
tests/unit/test_drag.py::TestDerivativeAccuracy::test_derivative_check_with_zero_beta PASSED [ 44%]
tests/unit/test_drag.py::TestBetaOptimization::test_optimize_beta_formula PASSED [ 44%]
tests/unit/test_drag.py::TestBetaOptimization::test_optimize_beta_various_anharmonicities PASSED [ 44%]
tests/unit/test_drag.py::TestBetaOptimization::test_optimize_beta_requires_anharmonicity PASSED [ 44%]
tests/unit/test_drag.py::TestPulseArea::test_pulse_area_i_component PASSED [ 45%]
tests/unit/test_drag.py::TestPulseArea::test_pulse_area_q_component_near_zero PASSED [ 45%]
tests/unit/test_drag.py::TestGatePulseCreation::test_create_x_gate_pulse PASSED [ 45%]
tests/unit/test_drag.py::TestGatePulseCreation::test_create_x2_gate_pulse PASSED [ 45%]
tests/unit/test_drag.py::TestGatePulseCreation::test_create_y_gate_pulse PASSED [ 45%]
tests/unit/test_drag.py::TestGatePulseCreation::test_without_beta_optimization PASSED [ 45%]
tests/unit/test_drag.py::TestGatePulseCreation::test_invalid_gate_type PASSED [ 45%]
tests/unit/test_drag.py::TestLeakageEstimate::test_leakage_estimate_basic PASSED [ 46%]
tests/unit/test_drag.py::TestLeakageEstimate::test_leakage_scales_with_amplitude PASSED [ 46%]
tests/unit/test_drag.py::TestLeakageEstimate::test_zero_anharmonicity_raises_error PASSED [ 46%]
tests/unit/test_drag.py::TestBetaScan::test_beta_scan_finds_optimal SKIPPED [ 46%]
tests/unit/test_drag.py::TestBetaScan::test_beta_scan_requires_3_levels PASSED [ 46%]
tests/unit/test_drag.py::TestHamiltonianCoefficients::test_coefficients_match_envelope PASSED [ 46%]
tests/unit/test_drag.py::TestEdgeCases::test_very_small_sigma PASSED     [ 47%]
tests/unit/test_drag.py::TestEdgeCases::test_very_large_sigma PASSED     [ 47%]
tests/unit/test_drag.py::TestEdgeCases::test_negative_beta PASSED        [ 47%]
tests/unit/test_drag.py::TestIntegrationWithQuTiP::test_drag_pulse_evolution PASSED [ 47%]
tests/unit/test_drag.py::TestIntegrationWithQuTiP::test_drag_improves_fidelity_vs_gaussian PASSED [ 47%]
tests/unit/test_drift.py::TestDriftHamiltonianInitialization::test_default_initialization PASSED [ 47%]
tests/unit/test_drift.py::TestDriftHamiltonianInitialization::test_custom_frequency PASSED [ 48%]
tests/unit/test_drift.py::TestDriftHamiltonianInitialization::test_invalid_frequency PASSED [ 48%]
tests/unit/test_drift.py::TestDriftHamiltonianInitialization::test_zero_frequency PASSED [ 48%]
tests/unit/test_drift.py::TestDriftHamiltonianInitialization::test_factory_function PASSED [ 48%]
tests/unit/test_drift.py::TestDriftHamiltonianSpectrum::test_energy_eigenvalues PASSED [ 48%]
tests/unit/test_drift.py::TestDriftHamiltonianSpectrum::test_energy_splitting PASSED [ 48%]
tests/unit/test_drift.py::TestDriftHamiltonianSpectrum::test_eigenstates_are_computational_basis PASSED [ 48%]
tests/unit/test_drift.py::TestDriftHamiltonianSpectrum::test_energy_levels_different_frequencies[1.0] PASSED [ 49%]
tests/unit/test_drift.py::TestDriftHamiltonianSpectrum::test_energy_levels_different_frequencies[5.0] PASSED [ 49%]
tests/unit/test_drift.py::TestDriftHamiltonianSpectrum::test_energy_levels_different_frequencies[10.0] PASSED [ 49%]
tests/unit/test_drift.py::TestDriftHamiltonianSpectrum::test_energy_levels_different_frequencies[100.0] PASSED [ 49%]
tests/unit/test_drift.py::TestDriftHamiltonianCommutators::test_commutes_with_sigmaz PASSED [ 49%]
tests/unit/test_drift.py::TestDriftHamiltonianCommutators::test_hamiltonian_is_diagonal PASSED [ 49%]
tests/unit/test_drift.py::TestDriftHamiltonianPeriod::test_precession_period_formula PASSED [ 50%]
tests/unit/test_drift.py::TestDriftHamiltonianPeriod::test_period_scales_inversely[1.0] PASSED [ 50%]
tests/unit/test_drift.py::TestDriftHamiltonianPeriod::test_period_scales_inversely[5.0] PASSED [ 50%]
tests/unit/test_drift.py::TestDriftHamiltonianPeriod::test_period_scales_inversely[10.0] PASSED [ 50%]
tests/unit/test_drift.py::TestDriftTimeEvolution::test_state_returns_after_one_period PASSED [ 50%]
tests/unit/test_drift.py::TestDriftTimeEvolution::test_no_x_rotation PASSED [ 50%]
tests/unit/test_drift.py::TestDriftTimeEvolution::test_no_y_rotation PASSED [ 51%]
tests/unit/test_drift.py::TestDriftTimeEvolution::test_z_expectation_conserved PASSED [ 51%]
tests/unit/test_drift.py::TestDriftTimeEvolution::test_computational_basis_states_stationary[initial_state0] PASSED [ 51%]
tests/unit/test_drift.py::TestDriftTimeEvolution::test_computational_basis_states_stationary[initial_state1] PASSED [ 51%]
tests/unit/test_drift.py::TestTimeEvolutionEngine::test_numerical_evolution PASSED [ 51%]
tests/unit/test_drift.py::TestTimeEvolutionEngine::test_analytical_evolution PASSED [ 51%]
tests/unit/test_drift.py::TestTimeEvolutionEngine::test_propagator_is_unitary PASSED [ 51%]
tests/unit/test_drift.py::TestTimeEvolutionEngine::test_compare_methods PASSED [ 52%]
tests/unit/test_drift.py::TestBlochSphereCoordinates::test_bloch_coordinates_ket0 PASSED [ 52%]
tests/unit/test_drift.py::TestBlochSphereCoordinates::test_bloch_coordinates_ket1 PASSED [ 52%]
tests/unit/test_drift.py::TestBlochSphereCoordinates::test_bloch_coordinates_ket_plus PASSED [ 52%]
tests/unit/test_drift.py::TestBlochSphereCoordinates::test_bloch_coordinates_ket_i PASSED [ 52%]
tests/unit/test_drift.py::TestBlochSphereCoordinates::test_bloch_trajectory_shape PASSED [ 52%]
tests/unit/test_drift.py::TestBlochSphereCoordinates::test_bloch_trajectory_stays_on_sphere PASSED [ 53%]
tests/unit/test_drift.py::TestStringRepresentations::test_drift_repr PASSED [ 53%]
tests/unit/test_drift.py::TestStringRepresentations::test_drift_str PASSED [ 53%]
tests/unit/test_drift.py::TestStringRepresentations::test_evolution_repr PASSED [ 53%]
tests/unit/test_drift.py::TestPhysicsValidation::test_full_evolution_cycle PASSED [ 53%]
tests/unit/test_drift.py::TestPhysicsValidation::test_energy_conservation PASSED [ 53%]
tests/unit/test_export.py::TestPulseExporter::test_exporter_initialization PASSED [ 54%]
tests/unit/test_export.py::TestPulseExporter::test_export_pulse_json_simple PASSED [ 54%]
tests/unit/test_export.py::TestPulseExporter::test_export_pulse_json_complex PASSED [ 54%]
tests/unit/test_export.py::TestPulseExporter::test_export_pulse_json_statistics PASSED [ 54%]
tests/unit/test_export.py::TestPulseExporter::test_export_pulse_npz PASSED [ 54%]
tests/unit/test_export.py::TestPulseExporter::test_export_pulse_npz_with_metadata PASSED [ 54%]
tests/unit/test_export.py::TestPulseExporter::test_export_pulse_csv PASSED [ 54%]
tests/unit/test_export.py::TestPulseExporter::test_export_pulse_csv_complex PASSED [ 55%]
tests/unit/test_export.py::TestPulseExporter::test_export_optimization_result_json PASSED [ 55%]
tests/unit/test_export.py::TestPulseExporter::test_export_optimization_result_npz PASSED [ 55%]
tests/unit/test_export.py::TestPulseExporter::test_export_experiment_config PASSED [ 55%]
tests/unit/test_export.py::TestPulseExporter::test_export_qiskit_pulse PASSED [ 55%]
tests/unit/test_export.py::TestPulseExporter::test_export_qiskit_pulse_complex PASSED [ 55%]
tests/unit/test_export.py::TestPulseLoader::test_load_pulse_json PASSED  [ 56%]
tests/unit/test_export.py::TestPulseLoader::test_load_pulse_npz PASSED   [ 56%]
tests/unit/test_export.py::TestPulseLoader::test_load_pulse_csv PASSED   [ 56%]
tests/unit/test_export.py::TestPulseLoader::test_load_optimization_result_json PASSED [ 56%]
tests/unit/test_export.py::TestPulseLoader::test_load_optimization_result_npz PASSED [ 56%]
tests/unit/test_export.py::TestPulseLoader::test_load_experiment_config PASSED [ 56%]
tests/unit/test_export.py::TestRoundTripConsistency::test_json_roundtrip PASSED [ 57%]
tests/unit/test_export.py::TestRoundTripConsistency::test_npz_roundtrip PASSED [ 57%]
tests/unit/test_export.py::TestRoundTripConsistency::test_csv_roundtrip PASSED [ 57%]
tests/unit/test_export.py::TestRoundTripConsistency::test_complex_pulse_roundtrip PASSED [ 57%]
tests/unit/test_export.py::TestRoundTripConsistency::test_optimization_result_roundtrip PASSED [ 57%]
tests/unit/test_export.py::TestMetadataPreservation::test_metadata_in_json PASSED [ 57%]
tests/unit/test_export.py::TestMetadataPreservation::test_additional_metadata PASSED [ 57%]
tests/unit/test_export.py::TestErrorHandling::test_invalid_format PASSED [ 58%]
tests/unit/test_export.py::TestErrorHandling::test_load_nonexistent_file PASSED [ 58%]
tests/unit/test_export.py::TestErrorHandling::test_empty_arrays PASSED   [ 58%]
tests/unit/test_export.py::TestErrorHandling::test_mismatched_array_lengths PASSED [ 58%]
tests/unit/test_export.py::TestErrorHandling::test_auto_format_detection PASSED [ 58%]
tests/unit/test_export.py::TestConvenienceFunctions::test_save_pulse_convenience PASSED [ 58%]
tests/unit/test_export.py::TestConvenienceFunctions::test_load_pulse_convenience PASSED [ 59%]
tests/unit/test_export.py::TestConvenienceFunctions::test_optimization_convenience_functions PASSED [ 59%]
tests/unit/test_export.py::TestNumPyDtypeHandling::test_complex_dtype_export PASSED [ 59%]
tests/unit/test_export.py::TestNumPyDtypeHandling::test_integer_dtype_export PASSED [ 59%]
tests/unit/test_export.py::TestNumPyDtypeHandling::test_float32_export PASSED [ 59%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_initialization PASSED [ 59%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_compute_filter_function_basic PASSED [ 60%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_filter_function_positive PASSED [ 60%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_compute_from_pulse_amplitude PASSED [ 60%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_compute_from_pulse_detuning PASSED [ 60%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_compute_from_pulse_phase PASSED [ 60%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_invalid_noise_type PASSED [ 60%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_invalid_inputs PASSED [ 60%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_short_array PASSED [ 61%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_custom_frequencies PASSED [ 61%]
tests/unit/test_filter_functions.py::TestFilterFunctionCalculator::test_square_pulse_filter_function PASSED [ 61%]
tests/unit/test_filter_functions.py::TestNoisePSD::test_white_noise PASSED [ 61%]
tests/unit/test_filter_functions.py::TestNoisePSD::test_one_over_f PASSED [ 61%]
tests/unit/test_filter_functions.py::TestNoisePSD::test_one_over_f_alpha PASSED [ 61%]
tests/unit/test_filter_functions.py::TestNoisePSD::test_lorentzian PASSED [ 62%]
tests/unit/test_filter_functions.py::TestNoisePSD::test_ohmic PASSED     [ 62%]
tests/unit/test_filter_functions.py::TestNoisePSD::test_gaussian PASSED  [ 62%]
tests/unit/test_filter_functions.py::TestNoiseInfidelityCalculator::test_initialization PASSED [ 62%]
tests/unit/test_filter_functions.py::TestNoiseInfidelityCalculator::test_compute_infidelity_white_noise PASSED [ 62%]
tests/unit/test_filter_functions.py::TestNoiseInfidelityCalculator::test_infidelity_scales_with_noise PASSED [ 62%]
tests/unit/test_filter_functions.py::TestNoiseInfidelityCalculator::test_compute_from_pulse PASSED [ 62%]
tests/unit/test_filter_functions.py::TestNoiseInfidelityCalculator::test_compare_pulses PASSED [ 63%]
tests/unit/test_filter_functions.py::TestNoiseInfidelityCalculator::test_integration_methods PASSED [ 63%]
tests/unit/test_filter_functions.py::TestNoiseInfidelityCalculator::test_invalid_integration_method PASSED [ 63%]
tests/unit/test_filter_functions.py::TestNoiseTailoredOptimizer::test_initialization PASSED [ 63%]
tests/unit/test_filter_functions.py::TestNoiseTailoredOptimizer::test_optimize_pulse_shape_basic PASSED [ 63%]
tests/unit/test_filter_functions.py::TestNoiseTailoredOptimizer::test_optimization_reduces_infidelity PASSED [ 63%]
tests/unit/test_filter_functions.py::TestNoiseTailoredOptimizer::test_amplitude_constraints PASSED [ 64%]
tests/unit/test_filter_functions.py::TestNoiseTailoredOptimizer::test_optimize_pulse_timing PASSED [ 64%]
tests/unit/test_filter_functions.py::TestUtilityFunctions::test_compute_filter_function_sum_rule PASSED [ 64%]
tests/unit/test_filter_functions.py::TestUtilityFunctions::test_analyze_pulse_noise_sensitivity PASSED [ 64%]
tests/unit/test_filter_functions.py::TestUtilityFunctions::test_analyze_pulse_custom_noise PASSED [ 64%]
tests/unit/test_filter_functions.py::TestVisualization::test_visualize_filter_function_basic PASSED [ 64%]
tests/unit/test_filter_functions.py::TestVisualization::test_visualize_with_noise_psd PASSED [ 65%]
tests/unit/test_filter_functions.py::TestVisualization::test_visualize_linear_scale PASSED [ 65%]
tests/unit/test_filter_functions.py::TestIntegration::test_full_pipeline_gaussian_pulse PASSED [ 65%]
tests/unit/test_filter_functions.py::TestIntegration::test_compare_gaussian_vs_square PASSED [ 65%]
tests/unit/test_filter_functions.py::TestIntegration::test_optimization_workflow PASSED [ 65%]
tests/unit/test_filter_functions.py::TestEdgeCases::test_zero_amplitude_pulse PASSED [ 65%]
tests/unit/test_filter_functions.py::TestEdgeCases::test_single_frequency_pulse PASSED [ 65%]
tests/unit/test_filter_functions.py::TestEdgeCases::test_very_short_pulse PASSED [ 66%]
tests/unit/test_filter_functions.py::TestEdgeCases::test_very_long_pulse PASSED [ 66%]
tests/unit/test_gates.py::TestUniversalGatesInitialization::test_basic_initialization PASSED [ 66%]
tests/unit/test_gates.py::TestUniversalGatesInitialization::test_custom_initial_state PASSED [ 66%]
tests/unit/test_gates.py::TestUniversalGatesInitialization::test_custom_fidelity_threshold PASSED [ 66%]
tests/unit/test_gates.py::TestUniversalGatesInitialization::test_standard_gates_available PASSED [ 66%]
tests/unit/test_gates.py::TestHadamardGateOptimization::test_hadamard_optimization_basic PASSED [ 67%]
tests/unit/test_gates.py::TestHadamardGateOptimization::test_hadamard_high_fidelity FAILED [ 67%]
tests/unit/test_gates.py::TestHadamardGateOptimization::test_hadamard_target_unitary_correct PASSED [ 67%]
tests/unit/test_gates.py::TestHadamardGateOptimization::test_hadamard_with_amplitude_limit PASSED [ 67%]
tests/unit/test_gates.py::TestHadamardGateOptimization::test_hadamard_metadata FAILED [ 67%]
tests/unit/test_gates.py::TestPhaseGateOptimization::test_s_gate_optimization FAILED [ 67%]
tests/unit/test_gates.py::TestPhaseGateOptimization::test_t_gate_optimization FAILED [ 68%]
tests/unit/test_gates.py::TestPhaseGateOptimization::test_z_gate_optimization FAILED [ 68%]
tests/unit/test_gates.py::TestPhaseGateOptimization::test_custom_phase_gate PASSED [ 68%]
tests/unit/test_gates.py::TestPhaseGateOptimization::test_sdg_gate_optimization FAILED [ 68%]
tests/unit/test_gates.py::TestPauliGateOptimization::test_x_gate_optimization PASSED [ 68%]
tests/unit/test_gates.py::TestPauliGateOptimization::test_y_gate_optimization FAILED [ 68%]
tests/unit/test_gates.py::TestPauliGateOptimization::test_z_gate_optimization FAILED [ 68%]
tests/unit/test_gates.py::TestPauliGateOptimization::test_pauli_gate_case_insensitive PASSED [ 69%]
tests/unit/test_gates.py::TestPauliGateOptimization::test_invalid_pauli_gate PASSED [ 69%]
tests/unit/test_gates.py::TestArbitraryRotations::test_rotation_about_x_axis PASSED [ 69%]
tests/unit/test_gates.py::TestArbitraryRotations::test_rotation_about_y_axis FAILED [ 69%]
tests/unit/test_gates.py::TestArbitraryRotations::test_rotation_about_z_axis PASSED [ 69%]
tests/unit/test_gates.py::TestArbitraryRotations::test_rotation_about_arbitrary_axis FAILED [ 69%]
tests/unit/test_gates.py::TestArbitraryRotations::test_rotation_normalizes_axis PASSED [ 70%]
tests/unit/test_gates.py::TestArbitraryRotations::test_rotation_zero_axis_error PASSED [ 70%]
tests/unit/test_gates.py::TestArbitraryRotations::test_rotation_invalid_axis_string PASSED [ 70%]
tests/unit/test_gates.py::TestArbitraryRotations::test_rotation_axis_wrong_dimension PASSED [ 70%]
tests/unit/test_gates.py::TestEulerAngles::test_euler_angles_identity PASSED [ 70%]
tests/unit/test_gates.py::TestEulerAngles::test_euler_angles_hadamard XFAIL [ 70%]
tests/unit/test_gates.py::TestEulerAngles::test_euler_angles_pauli_x PASSED [ 71%]
tests/unit/test_gates.py::TestEulerAngles::test_euler_angles_pauli_y PASSED [ 71%]
tests/unit/test_gates.py::TestEulerAngles::test_euler_angles_s_gate XFAIL [ 71%]
tests/unit/test_gates.py::TestEulerAngles::test_euler_angles_arbitrary_unitary PASSED [ 71%]
tests/unit/test_gates.py::TestEulerAngles::test_euler_angles_invalid_dimension PASSED [ 71%]
tests/unit/test_gates.py::TestEulerAngles::test_rotation_from_euler_angles_reconstruction PASSED [ 71%]
tests/unit/test_gates.py::TestCliffordGroupClosure::test_clifford_closure_with_analytical_gates PASSED [ 71%]
tests/unit/test_gates.py::TestCliffordGroupClosure::test_clifford_h_squared_identity PASSED [ 72%]
tests/unit/test_gates.py::TestCliffordGroupClosure::test_clifford_s_fourth_identity PASSED [ 72%]
tests/unit/test_gates.py::TestCliffordGroupClosure::test_clifford_hs_cubed_identity PASSED [ 72%]
tests/unit/test_gates.py::TestGateResultDataclass::test_gate_result_creation PASSED [ 72%]
tests/unit/test_gates.py::TestGateResultDataclass::test_gate_result_repr PASSED [ 72%]
tests/unit/test_gates.py::TestGateResultDataclass::test_gate_result_with_metadata PASSED [ 72%]
tests/unit/test_gates.py::TestStandardGateRetrieval::test_get_identity_gate PASSED [ 73%]
tests/unit/test_gates.py::TestStandardGateRetrieval::test_get_hadamard_gate PASSED [ 73%]
tests/unit/test_gates.py::TestStandardGateRetrieval::test_get_s_gate PASSED [ 73%]
tests/unit/test_gates.py::TestStandardGateRetrieval::test_get_t_gate PASSED [ 73%]
tests/unit/test_gates.py::TestStandardGateRetrieval::test_get_invalid_gate PASSED [ 73%]
tests/unit/test_gates.py::TestEdgeCasesAndErrors::test_invalid_optimization_method PASSED [ 73%]
tests/unit/test_gates.py::TestEdgeCasesAndErrors::test_very_short_gate_time PASSED [ 74%]
tests/unit/test_gates.py::TestEdgeCasesAndErrors::test_very_few_timeslices PASSED [ 74%]
tests/unit/test_grape.py::TestGRAPEInitialization::test_basic_initialization PASSED [ 74%]
tests/unit/test_grape.py::TestGRAPEInitialization::test_multi_control_initialization PASSED [ 74%]
tests/unit/test_grape.py::TestGRAPEInitialization::test_custom_parameters PASSED [ 74%]
tests/unit/test_grape.py::TestGRAPEInitialization::test_invalid_initialization PASSED [ 74%]
tests/unit/test_grape.py::TestGRAPEPropagators::test_compute_propagators PASSED [ 74%]
tests/unit/test_grape.py::TestGRAPEPropagators::test_forward_propagation PASSED [ 75%]
tests/unit/test_grape.py::TestGRAPEPropagators::test_backward_propagation PASSED [ 75%]
tests/unit/test_grape.py::TestGRAPEFidelity::test_identity_fidelity PASSED [ 75%]
tests/unit/test_grape.py::TestGRAPEFidelity::test_pauli_x_fidelity PASSED [ 75%]
tests/unit/test_grape.py::TestGRAPEFidelity::test_global_phase_invariance PASSED [ 75%]
tests/unit/test_grape.py::TestGRAPEFidelity::test_fidelity_against_qutip PASSED [ 75%]
tests/unit/test_grape.py::TestGRAPEFidelity::test_perfect_gate_fidelity PASSED [ 76%]
tests/unit/test_grape.py::TestGRAPEFidelity::test_orthogonal_gates_fidelity PASSED [ 76%]
tests/unit/test_grape.py::TestGRAPEOptimization::test_optimize_x_gate PASSED [ 76%]
tests/unit/test_grape.py::TestGRAPEOptimization::test_optimize_state_transfer PASSED [ 76%]
tests/unit/test_grape.py::TestGRAPEOptimization::test_fidelity_improvement PASSED [ 76%]
tests/unit/test_grape.py::TestGRAPEOptimization::test_gradient_norm_decreases PASSED [ 76%]
tests/unit/test_grape.py::TestGRAPEConstraints::test_amplitude_limits PASSED [ 77%]
tests/unit/test_grape.py::TestGRAPEConstraints::test_apply_constraints PASSED [ 77%]
tests/unit/test_grape.py::TestGRAPEMultiControl::test_two_control_optimization PASSED [ 77%]
tests/unit/test_grape.py::TestGRAPEPulseFunctions::test_get_pulse_functions PASSED [ 77%]
tests/unit/test_grape.py::TestGRAPEPulseFunctions::test_pulse_function_multi_control PASSED [ 77%]
tests/unit/test_grape.py::TestGRAPEAdaptiveStep::test_adaptive_step_decay PASSED [ 77%]
tests/unit/test_grape.py::TestGRAPEAdaptiveStep::test_fixed_step PASSED  [ 77%]
tests/unit/test_grape.py::TestGRAPEEdgeCases::test_already_optimal PASSED [ 78%]
tests/unit/test_grape.py::TestGRAPEEdgeCases::test_zero_initial_guess PASSED [ 78%]
tests/unit/test_grape.py::TestGRAPEEdgeCases::test_repr PASSED           [ 78%]
tests/unit/test_grape.py::TestGRAPEResult::test_result_structure PASSED  [ 78%]
tests/unit/test_lindblad.py::TestDecoherenceParams::test_valid_t1_t2 PASSED [ 78%]
tests/unit/test_lindblad.py::TestDecoherenceParams::test_t2_from_tphi PASSED [ 78%]
tests/unit/test_lindblad.py::TestDecoherenceParams::test_t2_limit PASSED [ 79%]
tests/unit/test_lindblad.py::TestDecoherenceParams::test_negative_t1 PASSED [ 79%]
tests/unit/test_lindblad.py::TestDecoherenceParams::test_negative_t2 PASSED [ 79%]
tests/unit/test_lindblad.py::TestDecoherenceParams::test_missing_t2_and_tphi PASSED [ 79%]
tests/unit/test_lindblad.py::TestDecoherenceParams::test_temperature PASSED [ 79%]
tests/unit/test_lindblad.py::TestDecoherenceParams::test_negative_temperature PASSED [ 79%]
tests/unit/test_lindblad.py::TestCollapseOperators::test_t1_collapse_operator PASSED [ 80%]
tests/unit/test_lindblad.py::TestCollapseOperators::test_pure_dephasing_operator PASSED [ 80%]
tests/unit/test_lindblad.py::TestCollapseOperators::test_no_pure_dephasing PASSED [ 80%]
tests/unit/test_lindblad.py::TestCollapseOperators::test_custom_collapse_operators PASSED [ 80%]
tests/unit/test_lindblad.py::TestLindbladEvolution::test_basic_evolution PASSED [ 80%]
tests/unit/test_lindblad.py::TestLindbladEvolution::test_expectation_values PASSED [ 80%]
tests/unit/test_lindblad.py::TestLindbladEvolution::test_time_dependent_hamiltonian PASSED [ 80%]
tests/unit/test_lindblad.py::TestT1Relaxation::test_t1_decay PASSED      [ 81%]
tests/unit/test_lindblad.py::TestT1Relaxation::test_t1_from_ground_state PASSED [ 81%]
tests/unit/test_lindblad.py::TestT1Relaxation::test_t1_timescale PASSED  [ 81%]
tests/unit/test_lindblad.py::TestT2Dephasing::test_ramsey_oscillations PASSED [ 81%]
tests/unit/test_lindblad.py::TestT2Dephasing::test_ramsey_decay_envelope PASSED [ 81%]
tests/unit/test_lindblad.py::TestComparisonWithUnitary::test_compare_with_unitary PASSED [ 81%]
tests/unit/test_lindblad.py::TestComparisonWithUnitary::test_fidelity_decreases PASSED [ 82%]
tests/unit/test_lindblad.py::TestComparisonWithUnitary::test_purity_decreases PASSED [ 82%]
tests/unit/test_lindblad.py::TestGateFidelityWithDecoherence::test_x_gate_fidelity PASSED [ 82%]
tests/unit/test_lindblad.py::TestGateFidelityWithDecoherence::test_shorter_gate_better_fidelity PASSED [ 82%]
tests/unit/test_lindblad.py::TestThermalState::test_zero_temperature PASSED [ 82%]
tests/unit/test_lindblad.py::TestThermalState::test_high_temperature PASSED [ 82%]
tests/unit/test_lindblad.py::TestThermalState::test_thermal_state_trace PASSED [ 82%]
tests/unit/test_lindblad.py::TestLindbladRepr::test_repr PASSED          [ 83%]
tests/unit/test_lindblad.py::TestEdgeCases::test_very_long_t1 PASSED     [ 83%]
tests/unit/test_lindblad.py::TestEdgeCases::test_short_t1_fast_decay PASSED [ 83%]
tests/unit/test_pulses.py::TestGaussianPulse::test_gaussian_pulse_amplitude PASSED [ 83%]
tests/unit/test_pulses.py::TestGaussianPulse::test_gaussian_pulse_symmetry PASSED [ 83%]
tests/unit/test_pulses.py::TestGaussianPulse::test_gaussian_pulse_width PASSED [ 83%]
tests/unit/test_pulses.py::TestGaussianPulse::test_gaussian_pulse_truncation PASSED [ 84%]
tests/unit/test_pulses.py::TestGaussianPulse::test_gaussian_pulse_integration PASSED [ 84%]
tests/unit/test_pulses.py::TestGaussianPulse::test_gaussian_pulse_zero_sigma PASSED [ 84%]
tests/unit/test_pulses.py::TestGaussianPulse::test_gaussian_pulse_negative_amplitude PASSED [ 84%]
tests/unit/test_pulses.py::TestSquarePulse::test_square_pulse_flat_top PASSED [ 84%]
tests/unit/test_pulses.py::TestSquarePulse::test_square_pulse_zero_outside PASSED [ 84%]
tests/unit/test_pulses.py::TestSquarePulse::test_square_pulse_duration PASSED [ 85%]
tests/unit/test_pulses.py::TestSquarePulse::test_square_pulse_with_rise_time PASSED [ 85%]
tests/unit/test_pulses.py::TestSquarePulse::test_square_pulse_area PASSED [ 85%]
tests/unit/test_pulses.py::TestSquarePulse::test_square_pulse_invalid_times PASSED [ 85%]
tests/unit/test_pulses.py::TestDRAGPulse::test_drag_pulse_components PASSED [ 85%]
tests/unit/test_pulses.py::TestDRAGPulse::test_drag_I_component_is_gaussian PASSED [ 85%]
tests/unit/test_pulses.py::TestDRAGPulse::test_drag_Q_component_is_derivative PASSED [ 85%]
tests/unit/test_pulses.py::TestDRAGPulse::test_drag_Q_zero_at_center PASSED [ 86%]
tests/unit/test_pulses.py::TestDRAGPulse::test_drag_Q_antisymmetric PASSED [ 86%]
tests/unit/test_pulses.py::TestDRAGPulse::test_drag_beta_scaling PASSED  [ 86%]
tests/unit/test_pulses.py::TestDRAGPulse::test_drag_zero_beta PASSED     [ 86%]
tests/unit/test_pulses.py::TestBlackmanPulse::test_blackman_pulse_range PASSED [ 86%]
tests/unit/test_pulses.py::TestBlackmanPulse::test_blackman_pulse_peak PASSED [ 86%]
tests/unit/test_pulses.py::TestBlackmanPulse::test_blackman_pulse_smooth_edges PASSED [ 87%]
tests/unit/test_pulses.py::TestBlackmanPulse::test_blackman_pulse_symmetry PASSED [ 87%]
tests/unit/test_pulses.py::TestCosinePulse::test_cosine_pulse_range PASSED [ 87%]
tests/unit/test_pulses.py::TestCosinePulse::test_cosine_pulse_boundary_conditions PASSED [ 87%]
tests/unit/test_pulses.py::TestCosinePulse::test_cosine_pulse_peak PASSED [ 87%]
tests/unit/test_pulses.py::TestCosinePulse::test_cosine_pulse_smoothness PASSED [ 87%]
tests/unit/test_pulses.py::TestPulseUtilities::test_pulse_area_square PASSED [ 88%]
tests/unit/test_pulses.py::TestPulseUtilities::test_pulse_area_gaussian PASSED [ 88%]
tests/unit/test_pulses.py::TestPulseUtilities::test_pulse_area_zero_pulse PASSED [ 88%]
tests/unit/test_pulses.py::TestPulseUtilities::test_scale_pulse_to_pi PASSED [ 88%]
tests/unit/test_pulses.py::TestPulseUtilities::test_scale_pulse_to_pi_half PASSED [ 88%]
tests/unit/test_pulses.py::TestPulseUtilities::test_scale_pulse_preserves_shape PASSED [ 88%]
tests/unit/test_pulses.py::TestPulseUtilities::test_scale_zero_pulse_raises PASSED [ 88%]
tests/unit/test_pulses.py::TestEdgeCases::test_empty_time_array PASSED   [ 89%]
tests/unit/test_pulses.py::TestEdgeCases::test_single_time_point PASSED  [ 89%]
tests/unit/test_pulses.py::TestEdgeCases::test_very_large_sigma PASSED   [ 89%]
tests/unit/test_pulses.py::TestEdgeCases::test_very_small_sigma PASSED   [ 89%]
tests/unit/test_pulses.py::TestEdgeCases::test_negative_duration_square_pulse PASSED [ 89%]
tests/unit/test_reports.py::TestPulseCharacteristics::test_creation PASSED [ 89%]
tests/unit/test_reports.py::TestPulseCharacteristics::test_with_custom_metrics PASSED [ 90%]
tests/unit/test_reports.py::TestPulseReport::test_initialization PASSED  [ 90%]
tests/unit/test_reports.py::TestPulseReport::test_with_custom_times PASSED [ 90%]
tests/unit/test_reports.py::TestPulseReport::test_with_gate_info PASSED  [ 90%]
tests/unit/test_reports.py::TestPulseReport::test_compute_characteristics PASSED [ 90%]
tests/unit/test_reports.py::TestPulseReport::test_add_comparison PASSED  [ 90%]
tests/unit/test_reports.py::TestPulseReport::test_multiple_comparisons PASSED [ 91%]
tests/unit/test_reports.py::TestPulseReport::test_generate_full_report PASSED [ 91%]
tests/unit/test_reports.py::TestPulseReport::test_generate_report_with_comparison PASSED [ 91%]
tests/unit/test_reports.py::TestPulseReport::test_save_full_report PASSED [ 91%]
tests/unit/test_reports.py::TestPulseReport::test_export_latex_table PASSED [ 91%]
tests/unit/test_reports.py::TestPulseReport::test_export_csv_table PASSED [ 91%]
tests/unit/test_reports.py::TestPulseReport::test_export_json_table PASSED [ 91%]
tests/unit/test_reports.py::TestPulseReport::test_export_unknown_format_raises PASSED [ 92%]
tests/unit/test_reports.py::TestPulseReport::test_characteristics_without_fidelity PASSED [ 92%]
tests/unit/test_reports.py::TestPulseReport::test_short_pulse PASSED     [ 92%]
tests/unit/test_reports.py::TestPulseReport::test_constant_pulse PASSED  [ 92%]
tests/unit/test_reports.py::TestOptimizationReport::test_initialization PASSED [ 92%]
tests/unit/test_reports.py::TestOptimizationReport::test_add_iteration PASSED [ 92%]
tests/unit/test_reports.py::TestOptimizationReport::test_multiple_iterations PASSED [ 93%]
tests/unit/test_reports.py::TestOptimizationReport::test_custom_metrics_tracking PASSED [ 93%]
tests/unit/test_reports.py::TestOptimizationReport::test_finalize PASSED [ 93%]
tests/unit/test_reports.py::TestOptimizationReport::test_generate_summary PASSED [ 93%]
tests/unit/test_reports.py::TestOptimizationReport::test_generate_summary_with_gradient PASSED [ 93%]
tests/unit/test_reports.py::TestOptimizationReport::test_save_summary PASSED [ 93%]
tests/unit/test_reports.py::TestOptimizationReport::test_empty_report PASSED [ 94%]
tests/unit/test_reports.py::TestGenerateLatexTable::test_basic_table PASSED [ 94%]
tests/unit/test_reports.py::TestGenerateLatexTable::test_numeric_formatting PASSED [ 94%]
tests/unit/test_reports.py::TestGenerateLatexTable::test_mixed_types PASSED [ 94%]
tests/unit/test_reports.py::TestGenerateLatexTable::test_single_row PASSED [ 94%]
tests/unit/test_reports.py::TestCreatePublicationFigure::test_single_dataset PASSED [ 94%]
tests/unit/test_reports.py::TestCreatePublicationFigure::test_multiple_datasets PASSED [ 94%]
tests/unit/test_reports.py::TestCreatePublicationFigure::test_save_to_file PASSED [ 95%]
tests/unit/test_reports.py::TestCreatePublicationFigure::test_custom_figsize PASSED [ 95%]
tests/unit/test_reports.py::TestCreatePublicationFigure::test_with_labels_and_legend PASSED [ 95%]
tests/unit/test_reports.py::TestCreatePublicationFigure::test_without_labels_no_legend PASSED [ 95%]
tests/unit/test_reports.py::TestCreatePublicationFigure::test_pdf_save PASSED [ 95%]
tests/unit/test_reports.py::TestIntegration::test_pulse_and_optimization_reports PASSED [ 95%]
tests/unit/test_reports.py::TestIntegration::test_full_workflow_with_exports PASSED [ 96%]
tests/unit/test_reports.py::TestIntegration::test_comparison_table_generation PASSED [ 96%]
tests/unit/test_robustness.py::TestRobustnessTesterInitialization::test_basic_initialization_unitary PASSED [ 96%]
tests/unit/test_robustness.py::TestRobustnessTesterInitialization::test_initialization_state_transfer PASSED [ 96%]
tests/unit/test_robustness.py::TestRobustnessTesterInitialization::test_invalid_initialization PASSED [ 96%]
tests/unit/test_robustness.py::TestDetuningSweep::test_sweep_detuning_basic PASSED [ 96%]
tests/unit/test_robustness.py::TestDetuningSweep::test_detuning_symmetry PASSED [ 97%]
tests/unit/test_robustness.py::TestDetuningSweep::test_nominal_fidelity_highest PASSED [ 97%]
tests/unit/test_robustness.py::TestDetuningSweep::test_robustness_radius PASSED [ 97%]
tests/unit/test_robustness.py::TestAmplitudeErrorSweep::test_sweep_amplitude_error PASSED [ 97%]
tests/unit/test_robustness.py::TestAmplitudeErrorSweep::test_amplitude_error_symmetry PASSED [ 97%]
tests/unit/test_robustness.py::TestAmplitudeErrorSweep::test_zero_error_best PASSED [ 97%]
tests/unit/test_robustness.py::TestGaussianNoise::test_add_gaussian_noise PASSED [ 97%]
tests/unit/test_robustness.py::TestGaussianNoise::test_noise_degrades_fidelity PASSED [ 98%]
tests/unit/test_robustness.py::TestGaussianNoise::test_noise_reproducibility PASSED [ 98%]
tests/unit/test_robustness.py::TestGaussianNoise::test_higher_noise_worse_fidelity PASSED [ 98%]
tests/unit/test_robustness.py::Test2DParameterSweep::test_2d_sweep PASSED [ 98%]
tests/unit/test_robustness.py::Test2DParameterSweep::test_2d_sweep_center_best PASSED [ 98%]
tests/unit/test_robustness.py::TestSensitivityComputation::test_compute_detuning_sensitivity PASSED [ 98%]
tests/unit/test_robustness.py::TestSensitivityComputation::test_compute_amplitude_sensitivity PASSED [ 99%]
tests/unit/test_robustness.py::TestSensitivityComputation::test_invalid_parameter_name PASSED [ 99%]
tests/unit/test_robustness.py::TestComparePulseRobustness::test_compare_pulse_robustness PASSED [ 99%]
tests/unit/test_robustness.py::TestRobustnessResult::test_result_structure PASSED [ 99%]
tests/unit/test_robustness.py::TestRobustnessRepr::test_repr PASSED      [ 99%]
tests/unit/test_robustness.py::TestEdgeCases::test_single_parameter_value PASSED [ 99%]
tests/unit/test_robustness.py::TestEdgeCases::test_perfect_pulse PASSED  [100%]

=================================== FAILURES ===================================
___________________ TestCliffordGroup.test_clifford_closure ____________________
tests/unit/test_benchmarking.py:154: in test_clifford_closure
    assert found, "Clifford group not closed under composition"
E   AssertionError: Clifford group not closed under composition
E   assert False
        _          = 5
        c          = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=True
Qobj data =
[[ 0.70710678 -0.70710678]
 [-0.70710678 -0.70710678]]
        clifford_group = <src.optimization.benchmarking.CliffordGroup object at 0x76c16826f9e0>
        found      = False
        g1         = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=CSR, isherm=False
Qobj data =
[[1.+0.j 0.+0.j]
 [0.+0.j 0.-1.j]]
        g2         = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=False
Qobj data =
[[0.        +7.07106781e-01j 0.        -7.07106781e-01j]
 [0.70710678-4.32978028e-17j 0.70710678-4.32978028e-17j]]
        overlap    = np.float64(1.0000000000000002)
        product    = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=False
Qobj data =
[[ 0.00000000e+00+7.07106781e-01j -7.07106781e-01+0.00000000e+00j]
 [ 7.07106781e-01-4.32978028e-17j -4.32978028e-17-7.07106781e-01j]]
        self       = <tests.unit.test_benchmarking.TestCliffordGroup object at 0x76c1685a8c50>
________________ TestRBExperiment.test_run_rb_experiment_ideal _________________
src/optimization/benchmarking.py:447: in _fit_rb_curve
    popt, pcov = curve_fit(
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c16828b740>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682af020>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
venv/lib/python3.12/site-packages/scipy/optimize/_minpack_py.py:1068: in curve_fit
    warnings.warn('Covariance of the parameters could not be estimated',
E   scipy.optimize._optimize.OptimizeWarning: Covariance of the parameters could not be estimated
        VT         = array([[-5.05327959e-01, -6.99486741e-01, -5.05333507e-01],
       [ 4.94614651e-01, -7.14645576e-01,  4.94608985e-01],
       [ 7.07106782e-01,  5.60779129e-06, -7.07106781e-01]])
        _          = array([[-0.35401696,  0.8183866 ,  0.45267579],
       [-0.53699286,  0.21841216, -0.81482194],
       [-0.76570925, -0.53154446,  0.36214615]])
        absolute_sigma = False
        bounded_problem = np.True_
        bounds     = ([0, 0, 0], [1, 1, 1])
        check_finite = True
        cost       = np.float64(5.401591856492691e-12)
        errmsg     = '`gtol` termination condition is satisfied.'
        f          = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c16828b740>
        full_output = False
        func       = <function _lightweight_memoizer.<locals>._memoized_func at 0x76c16828b920>
        ier        = 1
        infodict   = {'fvec': array([ 1.57661385e-06,  1.18798145e-07, -1.70345755e-06]), 'nfev': 18}
        jac        = '2-point'
        kwargs     = {'max_nfev': 5000}
        lb         = array([0., 0., 0.])
        method     = 'trf'
        n          = 3
        nan_policy = None
        p0         = array([0.5 , 0.95, 0.5 ])
        pcov       = array([[inf, inf, inf],
       [inf, inf, inf],
       [inf, inf, inf]])
        popt       = array([0.21440324, 0.9999983 , 0.7855987 ])
        res        =      message: `gtol` termination condition is satisfied.
     success: True
      status: 1
         fun: [ 1.577e-06 ...e-09 -3.187e-06 -8.046e-09]
  optimality: 6.300705987694151e-09
 active_mask: [0 0 0]
        nfev: 18
        njev: 18
        s          = array([3.27846670e+00, 1.02152268e+00, 4.73658631e-09])
        sigma      = None
        threshold  = np.float64(2.183897531612399e-15)
        transform  = None
        ub         = array([1., 1., 1.])
        warn_cov   = True
        xdata      = array([ 1.,  5., 10.])
        ydata      = array([1., 1., 1.])
        ysize      = 3

During handling of the above exception, another exception occurred:
tests/unit/test_benchmarking.py:271: in test_run_rb_experiment_ideal
    result = rb_experiment.run_rb_experiment(
        num_samples = 10
        rb_experiment = <src.optimization.benchmarking.RBExperiment object at 0x76c1682af020>
        self       = <tests.unit.test_benchmarking.TestRBExperiment object at 0x76c1685a9c70>
        sequence_lengths = [1, 5, 10]
src/optimization/benchmarking.py:423: in run_rb_experiment
    result = self.fit_rb_decay(sequence_lengths, survival_probs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        add_measurement_noise = False
        length     = np.int64(10)
        mean_prob  = np.float64(1.0)
        noise_model = None
        num_samples = 10
        rb_sequences = {1: [([Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dia, isherm=True
Qobj data =
[[1. 0.]
 [0. 1....106781e-01+0.j         -7.07106781e-01+0.j        ]
 [ 4.32978028e-17+0.70710678j  4.32978028e-17+0.70710678j]]), ...]}
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682af020>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:520: in fit_rb_decay
    A_fit, p_fit, B_fit, p_error = self._fit_rb_curve(
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682af020>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:461: in _fit_rb_curve
    warnings.warn(f"RB curve fitting failed: {e}. Using fallback.")
E   UserWarning: RB curve fitting failed: Covariance of the parameters could not be estimated. Using fallback.
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c16828b740>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682af020>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
__________________ TestRBExperiment.test_rb_result_attributes __________________
src/optimization/benchmarking.py:447: in _fit_rb_curve
    popt, pcov = curve_fit(
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c168310180>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c168469520>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
venv/lib/python3.12/site-packages/scipy/optimize/_minpack_py.py:1068: in curve_fit
    warnings.warn('Covariance of the parameters could not be estimated',
E   scipy.optimize._optimize.OptimizeWarning: Covariance of the parameters could not be estimated
        VT         = array([[-5.05327959e-01, -6.99486741e-01, -5.05333507e-01],
       [ 4.94614651e-01, -7.14645576e-01,  4.94608985e-01],
       [ 7.07106782e-01,  5.60779129e-06, -7.07106781e-01]])
        _          = array([[-0.35401696,  0.8183866 ,  0.45267579],
       [-0.53699286,  0.21841216, -0.81482194],
       [-0.76570925, -0.53154446,  0.36214615]])
        absolute_sigma = False
        bounded_problem = np.True_
        bounds     = ([0, 0, 0], [1, 1, 1])
        check_finite = True
        cost       = np.float64(5.401591856492691e-12)
        errmsg     = '`gtol` termination condition is satisfied.'
        f          = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c168310180>
        full_output = False
        func       = <function _lightweight_memoizer.<locals>._memoized_func at 0x76c168310040>
        ier        = 1
        infodict   = {'fvec': array([ 1.57661385e-06,  1.18798145e-07, -1.70345755e-06]), 'nfev': 18}
        jac        = '2-point'
        kwargs     = {'max_nfev': 5000}
        lb         = array([0., 0., 0.])
        method     = 'trf'
        n          = 3
        nan_policy = None
        p0         = array([0.5 , 0.95, 0.5 ])
        pcov       = array([[inf, inf, inf],
       [inf, inf, inf],
       [inf, inf, inf]])
        popt       = array([0.21440324, 0.9999983 , 0.7855987 ])
        res        =      message: `gtol` termination condition is satisfied.
     success: True
      status: 1
         fun: [ 1.577e-06 ...e-09 -3.187e-06 -8.046e-09]
  optimality: 6.300705987694151e-09
 active_mask: [0 0 0]
        nfev: 18
        njev: 18
        s          = array([3.27846670e+00, 1.02152268e+00, 4.73658631e-09])
        sigma      = None
        threshold  = np.float64(2.183897531612399e-15)
        transform  = None
        ub         = array([1., 1., 1.])
        warn_cov   = True
        xdata      = array([ 1.,  5., 10.])
        ydata      = array([1., 1., 1.])
        ysize      = 3

During handling of the above exception, another exception occurred:
tests/unit/test_benchmarking.py:318: in test_rb_result_attributes
    result = rb_experiment.run_rb_experiment(sequence_lengths, num_samples)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        num_samples = 10
        rb_experiment = <src.optimization.benchmarking.RBExperiment object at 0x76c168469520>
        self       = <tests.unit.test_benchmarking.TestRBExperiment object at 0x76c1685aa210>
        sequence_lengths = [1, 5, 10]
src/optimization/benchmarking.py:423: in run_rb_experiment
    result = self.fit_rb_decay(sequence_lengths, survival_probs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        add_measurement_noise = False
        length     = np.int64(10)
        mean_prob  = np.float64(1.0)
        noise_model = None
        num_samples = 10
        rb_sequences = {1: [([Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=CSR, isherm=True
Qobj data =
[[0.+0.j 0.-1.j]...106781e-01+0.j         -4.32978028e-17-0.70710678j]
 [ 7.07106781e-01+0.j          4.32978028e-17+0.70710678j]]), ...]}
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c168469520>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:520: in fit_rb_decay
    A_fit, p_fit, B_fit, p_error = self._fit_rb_curve(
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c168469520>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:461: in _fit_rb_curve
    warnings.warn(f"RB curve fitting failed: {e}. Using fallback.")
E   UserWarning: RB curve fitting failed: Covariance of the parameters could not be estimated. Using fallback.
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c168310180>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c168469520>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
__________________ TestInterleavedRB.test_run_interleaved_rb ___________________
src/optimization/benchmarking.py:447: in _fit_rb_curve
    popt, pcov = curve_fit(
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c1683105e0>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682ade20>
        sequence_lengths = array([1, 3, 5])
        survival_probs = array([1., 1., 1.])
venv/lib/python3.12/site-packages/scipy/optimize/_minpack_py.py:1068: in curve_fit
    warnings.warn('Covariance of the parameters could not be estimated',
E   scipy.optimize._optimize.OptimizeWarning: Covariance of the parameters could not be estimated
        VT         = array([[-5.77509051e-01, -5.77026584e-01, -5.77515036e-01],
       [ 4.08023650e-01, -8.16725364e-01,  4.08015171e-01],
       [-7.07106779e-01, -7.33876993e-06,  7.07106783e-01]])
        _          = array([[-0.45016515,  0.7941579 ,  0.40824571],
       [-0.56912227,  0.09712453, -0.81649658],
       [-0.68807788, -0.59990004,  0.40825087]])
        absolute_sigma = False
        bounded_problem = np.True_
        bounds     = ([0, 0, 0], [1, 1, 1])
        check_finite = True
        cost       = np.float64(7.428950722358537e-12)
        errmsg     = '`gtol` termination condition is satisfied.'
        f          = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c1683105e0>
        full_output = False
        func       = <function _lightweight_memoizer.<locals>._memoized_func at 0x76c168310400>
        ier        = 1
        infodict   = {'fvec': array([ 1.92277784e-06, -4.51774640e-09, -1.93180115e-06]), 'nfev': 17}
        jac        = '2-point'
        kwargs     = {'max_nfev': 5000}
        lb         = array([0., 0., 0.])
        method     = 'trf'
        n          = 3
        nan_policy = None
        p0         = array([0.5 , 0.95, 0.5 ])
        pcov       = array([[inf, inf, inf],
       [inf, inf, inf],
       [inf, inf, inf]])
        popt       = array([0.30474486, 0.99999684, 0.69525803])
        res        =      message: `gtol` termination condition is satisfied.
     success: True
      status: 1
         fun: [ 1.923e-06 ...e-08 -2.362e-06 -1.354e-08]
  optimality: 9.397443554847028e-09
 active_mask: [0 0 0]
        nfev: 17
        njev: 17
        s          = array([2.95639975e+00, 7.14145989e-01, 4.32467595e-09])
        sigma      = None
        threshold  = np.float64(1.969357844028427e-15)
        transform  = None
        ub         = array([1., 1., 1.])
        warn_cov   = True
        xdata      = array([1., 3., 5.])
        ydata      = array([1., 1., 1.])
        ysize      = 3

During handling of the above exception, another exception occurred:
tests/unit/test_benchmarking.py:379: in test_run_interleaved_rb
    standard, interleaved, F_gate = interleaved_rb.run_interleaved_rb(
        interleaved_rb = <src.optimization.benchmarking.InterleavedRB object at 0x76c1682acd40>
        num_samples = 10
        self       = <tests.unit.test_benchmarking.TestInterleavedRB object at 0x76c1685aa9f0>
        sequence_lengths = [1, 3, 5]
        target_gate = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=CSR, isherm=True
Qobj data =
[[0. 1.]
 [1. 0.]]
src/optimization/benchmarking.py:607: in run_interleaved_rb
    standard_result = self.rb_experiment.run_rb_experiment(
        noise_model = None
        num_samples = 10
        self       = <src.optimization.benchmarking.InterleavedRB object at 0x76c1682acd40>
        sequence_lengths = [1, 3, 5]
        target_gate = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=CSR, isherm=True
Qobj data =
[[0. 1.]
 [1. 0.]]
src/optimization/benchmarking.py:423: in run_rb_experiment
    result = self.fit_rb_decay(sequence_lengths, survival_probs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        add_measurement_noise = False
        length     = np.int64(5)
        mean_prob  = np.float64(1.0)
        noise_model = None
        num_samples = 10
        rb_sequences = {1: [([Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=CSR, isherm=False
Qobj data =
[[0.+0.j 1.+0.j...106781e-01+0.j          7.07106781e-01+0.j        ]
 [ 4.32978028e-17+0.70710678j -4.32978028e-17-0.70710678j]]), ...]}
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682ade20>
        sequence_lengths = array([1, 3, 5])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:520: in fit_rb_decay
    A_fit, p_fit, B_fit, p_error = self._fit_rb_curve(
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682ade20>
        sequence_lengths = array([1, 3, 5])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:461: in _fit_rb_curve
    warnings.warn(f"RB curve fitting failed: {e}. Using fallback.")
E   UserWarning: RB curve fitting failed: Covariance of the parameters could not be estimated. Using fallback.
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c1683105e0>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682ade20>
        sequence_lengths = array([1, 3, 5])
        survival_probs = array([1., 1., 1.])
_______________ TestInterleavedRB.test_interleaved_rb_with_noise _______________
src/optimization/benchmarking.py:447: in _fit_rb_curve
    popt, pcov = curve_fit(
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c168310900>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a70b0>
        sequence_lengths = array([1, 3, 5])
        survival_probs = array([1., 1., 1.])
venv/lib/python3.12/site-packages/scipy/optimize/_minpack_py.py:1068: in curve_fit
    warnings.warn('Covariance of the parameters could not be estimated',
E   scipy.optimize._optimize.OptimizeWarning: Covariance of the parameters could not be estimated
        VT         = array([[-5.77509051e-01, -5.77026584e-01, -5.77515036e-01],
       [ 4.08023650e-01, -8.16725364e-01,  4.08015171e-01],
       [-7.07106779e-01, -7.33876993e-06,  7.07106783e-01]])
        _          = array([[-0.45016515,  0.7941579 ,  0.40824571],
       [-0.56912227,  0.09712453, -0.81649658],
       [-0.68807788, -0.59990004,  0.40825087]])
        absolute_sigma = False
        bounded_problem = np.True_
        bounds     = ([0, 0, 0], [1, 1, 1])
        check_finite = True
        cost       = np.float64(7.428950722358537e-12)
        errmsg     = '`gtol` termination condition is satisfied.'
        f          = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c168310900>
        full_output = False
        func       = <function _lightweight_memoizer.<locals>._memoized_func at 0x76c168310360>
        ier        = 1
        infodict   = {'fvec': array([ 1.92277784e-06, -4.51774640e-09, -1.93180115e-06]), 'nfev': 17}
        jac        = '2-point'
        kwargs     = {'max_nfev': 5000}
        lb         = array([0., 0., 0.])
        method     = 'trf'
        n          = 3
        nan_policy = None
        p0         = array([0.5 , 0.95, 0.5 ])
        pcov       = array([[inf, inf, inf],
       [inf, inf, inf],
       [inf, inf, inf]])
        popt       = array([0.30474486, 0.99999684, 0.69525803])
        res        =      message: `gtol` termination condition is satisfied.
     success: True
      status: 1
         fun: [ 1.923e-06 ...e-08 -2.362e-06 -1.354e-08]
  optimality: 9.397443554847028e-09
 active_mask: [0 0 0]
        nfev: 17
        njev: 17
        s          = array([2.95639975e+00, 7.14145989e-01, 4.32467595e-09])
        sigma      = None
        threshold  = np.float64(1.969357844028427e-15)
        transform  = None
        ub         = array([1., 1., 1.])
        warn_cov   = True
        xdata      = array([1., 3., 5.])
        ydata      = array([1., 1., 1.])
        ysize      = 3

During handling of the above exception, another exception occurred:
tests/unit/test_benchmarking.py:406: in test_interleaved_rb_with_noise
    standard, interleaved, F_gate = interleaved_rb.run_interleaved_rb(
        interleaved_rb = <src.optimization.benchmarking.InterleavedRB object at 0x76c1682a5e20>
        noise      = <function TestInterleavedRB.test_interleaved_rb_with_noise.<locals>.noise at 0x76c168310a40>
        num_samples = 10
        self       = <tests.unit.test_benchmarking.TestInterleavedRB object at 0x76c1685aabd0>
        sequence_lengths = [1, 3, 5]
        target_gate = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=CSR, isherm=True
Qobj data =
[[0. 1.]
 [1. 0.]]
src/optimization/benchmarking.py:607: in run_interleaved_rb
    standard_result = self.rb_experiment.run_rb_experiment(
        noise_model = <function TestInterleavedRB.test_interleaved_rb_with_noise.<locals>.noise at 0x76c168310a40>
        num_samples = 10
        self       = <src.optimization.benchmarking.InterleavedRB object at 0x76c1682a5e20>
        sequence_lengths = [1, 3, 5]
        target_gate = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=CSR, isherm=True
Qobj data =
[[0. 1.]
 [1. 0.]]
src/optimization/benchmarking.py:423: in run_rb_experiment
    result = self.fit_rb_decay(sequence_lengths, survival_probs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        add_measurement_noise = False
        length     = np.int64(5)
        mean_prob  = np.float64(1.0)
        noise_model = <function TestInterleavedRB.test_interleaved_rb_with_noise.<locals>.noise at 0x76c168310a40>
        num_samples = 10
        rb_sequences = {1: [([Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=False
Qobj data =
[[0.+0.707106...34717e-17j  2.29934717e-17+7.07106781e-01j]
 [ 2.29934717e-17+7.07106781e-01j -7.07106781e-01-2.29934717e-17j]]), ...]}
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a70b0>
        sequence_lengths = array([1, 3, 5])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:520: in fit_rb_decay
    A_fit, p_fit, B_fit, p_error = self._fit_rb_curve(
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a70b0>
        sequence_lengths = array([1, 3, 5])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:461: in _fit_rb_curve
    warnings.warn(f"RB curve fitting failed: {e}. Using fallback.")
E   UserWarning: RB curve fitting failed: Covariance of the parameters could not be estimated. Using fallback.
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c168310900>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a70b0>
        sequence_lengths = array([1, 3, 5])
        survival_probs = array([1., 1., 1.])
_______________ TestVisualization.test_visualize_rb_decay_no_fit _______________
src/optimization/benchmarking.py:447: in _fit_rb_curve
    popt, pcov = curve_fit(
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c1683109a0>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a6210>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([0.95, 0.85, 0.75])
venv/lib/python3.12/site-packages/scipy/optimize/_minpack_py.py:1068: in curve_fit
    warnings.warn('Covariance of the parameters could not be estimated',
E   scipy.optimize._optimize.OptimizeWarning: Covariance of the parameters could not be estimated
        VT         = array([[-0.23406949, -0.91575454, -0.32650437],
       [ 0.67752308, -0.3945003 ,  0.62075115],
       [-0.69726175, -0.07591534,  0.71278532]])
        _          = array([[-0.22359494,  0.90679342,  0.35739473],
       [-0.55632975,  0.18234603, -0.8107078 ],
       [-0.80031401, -0.38009948,  0.46370451]])
        absolute_sigma = False
        bounded_problem = np.True_
        bounds     = ([0, 0, 0], [1, 1, 1])
        check_finite = True
        cost       = np.float64(9.612091847960312e-16)
        errmsg     = '`gtol` termination condition is satisfied.'
        f          = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c1683109a0>
        full_output = False
        func       = <function _lightweight_memoizer.<locals>._memoized_func at 0x76c16606f100>
        ier        = 1
        infodict   = {'fvec': array([ 1.12228240e-08, -2.49792925e-08,  1.45358987e-08]), 'nfev': 13}
        jac        = '2-point'
        kwargs     = {'max_nfev': 5000}
        lb         = array([0., 0., 0.])
        method     = 'trf'
        n          = 3
        nan_policy = None
        p0         = array([0.5 , 0.95, 0.5 ])
        pcov       = array([[inf, inf, inf],
       [inf, inf, inf],
       [inf, inf, inf]])
        popt       = array([0.58199704, 0.95142533, 0.39627329])
        res        =      message: `gtol` termination condition is satisfied.
     success: True
      status: 1
         fun: [ 1.122e-08 ...9e-11  1.012e-09  7.794e-10]
  optimality: 9.62879741940812e-10
 active_mask: [0 0 0]
        nfev: 13
        njev: 12
        s          = array([4.83987002, 1.14222902, 0.01457864])
        sigma      = None
        threshold  = np.float64(3.2240010814501923e-15)
        transform  = None
        ub         = array([1., 1., 1.])
        warn_cov   = True
        xdata      = array([ 1.,  5., 10.])
        ydata      = array([0.95, 0.85, 0.75])
        ysize      = 3

During handling of the above exception, another exception occurred:
tests/unit/test_benchmarking.py:480: in test_visualize_rb_decay_no_fit
    result = rb_experiment.fit_rb_decay(sequence_lengths, survival_probs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        plt        = <module 'matplotlib.pyplot' from '/home/rylan/Documents/research/quantumComputing/QubitPulseOpt/QubitPulseOpt/venv/lib/python3.12/site-packages/matplotlib/pyplot.py'>
        rb_experiment = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a6210>
        self       = <tests.unit.test_benchmarking.TestVisualization object at 0x76c1685aab70>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([0.95, 0.85, 0.75])
src/optimization/benchmarking.py:520: in fit_rb_decay
    A_fit, p_fit, B_fit, p_error = self._fit_rb_curve(
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a6210>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([0.95, 0.85, 0.75])
src/optimization/benchmarking.py:461: in _fit_rb_curve
    warnings.warn(f"RB curve fitting failed: {e}. Using fallback.")
E   UserWarning: RB curve fitting failed: Covariance of the parameters could not be estimated. Using fallback.
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c1683109a0>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a6210>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([0.95, 0.85, 0.75])
______________ TestIntegration.test_rb_with_multiple_noise_levels ______________
src/optimization/benchmarking.py:447: in _fit_rb_curve
    popt, pcov = curve_fit(
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c16606fc40>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a5160>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
venv/lib/python3.12/site-packages/scipy/optimize/_minpack_py.py:1068: in curve_fit
    warnings.warn('Covariance of the parameters could not be estimated',
E   scipy.optimize._optimize.OptimizeWarning: Covariance of the parameters could not be estimated
        VT         = array([[-5.05327959e-01, -6.99486741e-01, -5.05333507e-01],
       [ 4.94614651e-01, -7.14645576e-01,  4.94608985e-01],
       [ 7.07106782e-01,  5.60779129e-06, -7.07106781e-01]])
        _          = array([[-0.35401696,  0.8183866 ,  0.45267579],
       [-0.53699286,  0.21841216, -0.81482194],
       [-0.76570925, -0.53154446,  0.36214615]])
        absolute_sigma = False
        bounded_problem = np.True_
        bounds     = ([0, 0, 0], [1, 1, 1])
        check_finite = True
        cost       = np.float64(5.401591856492691e-12)
        errmsg     = '`gtol` termination condition is satisfied.'
        f          = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c16606fc40>
        full_output = False
        func       = <function _lightweight_memoizer.<locals>._memoized_func at 0x76c16606fb00>
        ier        = 1
        infodict   = {'fvec': array([ 1.57661385e-06,  1.18798145e-07, -1.70345755e-06]), 'nfev': 18}
        jac        = '2-point'
        kwargs     = {'max_nfev': 5000}
        lb         = array([0., 0., 0.])
        method     = 'trf'
        n          = 3
        nan_policy = None
        p0         = array([0.5 , 0.95, 0.5 ])
        pcov       = array([[inf, inf, inf],
       [inf, inf, inf],
       [inf, inf, inf]])
        popt       = array([0.21440324, 0.9999983 , 0.7855987 ])
        res        =      message: `gtol` termination condition is satisfied.
     success: True
      status: 1
         fun: [ 1.577e-06 ...e-09 -3.187e-06 -8.046e-09]
  optimality: 6.300705987694151e-09
 active_mask: [0 0 0]
        nfev: 18
        njev: 18
        s          = array([3.27846670e+00, 1.02152268e+00, 4.73658631e-09])
        sigma      = None
        threshold  = np.float64(2.183897531612399e-15)
        transform  = None
        ub         = array([1., 1., 1.])
        warn_cov   = True
        xdata      = array([ 1.,  5., 10.])
        ydata      = array([1., 1., 1.])
        ysize      = 3

During handling of the above exception, another exception occurred:
tests/unit/test_benchmarking.py:550: in test_rb_with_multiple_noise_levels
    result = rb_exp.run_rb_experiment(
        error_rates = [0.001, 0.01, 0.05]
        fidelities = []
        noise      = <function TestIntegration.test_rb_with_multiple_noise_levels.<locals>.noise at 0x76c16606f740>
        num_samples = 15
        rate       = 0.001
        rb_exp     = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a5160>
        self       = <tests.unit.test_benchmarking.TestIntegration object at 0x76c1685a9b80>
        sequence_lengths = [1, 5, 10]
src/optimization/benchmarking.py:423: in run_rb_experiment
    result = self.fit_rb_decay(sequence_lengths, survival_probs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        add_measurement_noise = False
        length     = np.int64(10)
        mean_prob  = np.float64(1.0)
        noise_model = <function TestIntegration.test_rb_with_multiple_noise_levels.<locals>.noise at 0x76c16606f740>
        num_samples = 15
        rb_sequences = {1: [([Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=False
Qobj data =
[[ 4.32978028...710678+4.32978028e-17j  0.        -7.07106781e-01j]
 [ 0.70710678-4.32978028e-17j  0.        -7.07106781e-01j]]), ...]}
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a5160>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:520: in fit_rb_decay
    A_fit, p_fit, B_fit, p_error = self._fit_rb_curve(
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a5160>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:461: in _fit_rb_curve
    warnings.warn(f"RB curve fitting failed: {e}. Using fallback.")
E   UserWarning: RB curve fitting failed: Covariance of the parameters could not be estimated. Using fallback.
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c16606fc40>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a5160>
        sequence_lengths = array([ 1,  5, 10])
        survival_probs = array([1., 1., 1.])
_______________ TestEdgeCases.test_rb_with_short_sequences_only ________________
src/optimization/benchmarking.py:447: in _fit_rb_curve
    popt, pcov = curve_fit(
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c16606f420>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a76e0>
        sequence_lengths = array([1, 2, 3])
        survival_probs = array([1., 1., 1.])
venv/lib/python3.12/site-packages/scipy/optimize/_minpack_py.py:1068: in curve_fit
    warnings.warn('Covariance of the parameters could not be estimated',
E   scipy.optimize._optimize.OptimizeWarning: Covariance of the parameters could not be estimated
        VT         = array([[-6.20266977e-01, -4.80132624e-01, -6.20275375e-01],
       [ 3.39512702e-01, -8.77195909e-01,  3.39497367e-01],
       [ 7.07106783e-01,  1.23626924e-05, -7.07106779e-01]])
        _          = array([[-0.51053196,  0.75676458,  0.40824562],
       [-0.57494978,  0.05259352, -0.81649658],
       [-0.63936676, -0.65156833,  0.40825096]])
        absolute_sigma = False
        bounded_problem = np.True_
        bounds     = ([0, 0, 0], [1, 1, 1])
        check_finite = True
        cost       = np.float64(1.1851353857419381e-11)
        errmsg     = '`gtol` termination condition is satisfied.'
        f          = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c16606f420>
        full_output = False
        func       = <function _lightweight_memoizer.<locals>._memoized_func at 0x76c16606f380>
        ier        = 1
        infodict   = {'fvec': array([ 2.43092928e-06, -3.34655659e-09, -2.43760651e-06]), 'nfev': 16}
        jac        = '2-point'
        kwargs     = {'max_nfev': 5000}
        lb         = array([0., 0., 0.])
        method     = 'trf'
        n          = 3
        nan_policy = None
        p0         = array([0.5 , 0.95, 0.5 ])
        pcov       = array([[inf, inf, inf],
       [inf, inf, inf],
       [inf, inf, inf]])
        popt       = array([0.37310124, 0.99999348, 0.62690362])
        res        =      message: `gtol` termination condition is satisfied.
     success: True
      status: 1
         fun: [ 2.431e-06 ...e-09 -1.824e-06 -1.002e-08]
  optimality: 6.263909167979484e-09
 active_mask: [0 0 0]
        nfev: 16
        njev: 16
        s          = array([2.78077864e+00, 4.64774628e-01, 2.12616711e-09])
        sigma      = None
        threshold  = np.float64(1.8523706831566944e-15)
        transform  = None
        ub         = array([1., 1., 1.])
        warn_cov   = True
        xdata      = array([1., 2., 3.])
        ydata      = array([1., 1., 1.])
        ysize      = 3

During handling of the above exception, another exception occurred:
tests/unit/test_benchmarking.py:588: in test_rb_with_short_sequences_only
    result = rb_experiment.run_rb_experiment(sequence_lengths, num_samples)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        num_samples = 10
        rb_experiment = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a76e0>
        self       = <tests.unit.test_benchmarking.TestEdgeCases object at 0x76c1685ab380>
        sequence_lengths = [1, 2, 3]
src/optimization/benchmarking.py:423: in run_rb_experiment
    result = self.fit_rb_decay(sequence_lengths, survival_probs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        add_measurement_noise = False
        length     = np.int64(3)
        mean_prob  = np.float64(1.0)
        noise_model = None
        num_samples = 10
        rb_sequences = {1: [([Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=False
Qobj data =
[[ 0.70710678...78028e-17j  0.00000000e+00+7.07106781e-01j]
 [ 4.32978028e-17-7.07106781e-01j  7.07106781e-01-0.00000000e+00j]]), ...]}
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a76e0>
        sequence_lengths = array([1, 2, 3])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:520: in fit_rb_decay
    A_fit, p_fit, B_fit, p_error = self._fit_rb_curve(
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a76e0>
        sequence_lengths = array([1, 2, 3])
        survival_probs = array([1., 1., 1.])
src/optimization/benchmarking.py:461: in _fit_rb_curve
    warnings.warn(f"RB curve fitting failed: {e}. Using fallback.")
E   UserWarning: RB curve fitting failed: Covariance of the parameters could not be estimated. Using fallback.
        p0         = [0.5, 0.95, 0.5]
        rb_decay   = <function RBExperiment._fit_rb_curve.<locals>.rb_decay at 0x76c16606f420>
        self       = <src.optimization.benchmarking.RBExperiment object at 0x76c1682a76e0>
        sequence_lengths = array([1, 2, 3])
        survival_probs = array([1., 1., 1.])
________________ TestEulerDecomposition.test_decompose_hadamard ________________
tests/unit/test_compilation.py:301: in test_decompose_hadamard
    assert decomp.fidelity > 0.999
E   assert 0.0 > 0.999
E    +  where 0.0 = EulerDecomposition(φ₁=-180.00°, θ=90.00°, φ₂=0.00°, F=0.00000000).fidelity
        H          = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=True
Qobj data =
[[ 0.70710678  0.70710678]
 [ 0.70710678 -0.70710678]]
        compiler   = <src.optimization.compilation.GateCompiler object at 0x76c163591580>
        decomp     = EulerDecomposition(φ₁=-180.00°, θ=90.00°, φ₂=0.00°, F=0.00000000)
        self       = <tests.unit.test_compilation.TestEulerDecomposition object at 0x76c168615490>
_________________ TestEulerDecomposition.test_decompose_s_gate _________________
tests/unit/test_compilation.py:320: in test_decompose_s_gate
    assert decomp.fidelity > 0.999
E   assert 0.0 > 0.999
E    +  where 0.0 = EulerDecomposition(φ₁=0.00°, θ=0.00°, φ₂=-90.00°, F=0.00000000).fidelity
        S          = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=CSR, isherm=False
Qobj data =
[[1.000000e+00+0.j 0.000000e+00+0.j]
 [0.000000e+00+0.j 6.123234e-17+1.j]]
        compiler   = <src.optimization.compilation.GateCompiler object at 0x76c163871e80>
        decomp     = EulerDecomposition(φ₁=0.00°, θ=0.00°, φ₂=-90.00°, F=0.00000000)
        self       = <tests.unit.test_compilation.TestEulerDecomposition object at 0x76c168615850>
_________________ TestEulerDecomposition.test_decompose_t_gate _________________
tests/unit/test_compilation.py:327: in test_decompose_t_gate
    assert decomp.fidelity > 0.999
E   assert 0.5000000000000001 > 0.999
E    +  where 0.5000000000000001 = EulerDecomposition(φ₁=0.00°, θ=0.00°, φ₂=-45.00°, F=0.50000000).fidelity
        T          = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=CSR, isherm=False
Qobj data =
[[1.        +0.j         0.        +0.j        ]
 [0.        +0.j         0.70710678+0.70710678j]]
        compiler   = <src.optimization.compilation.GateCompiler object at 0x76c1635f1fd0>
        decomp     = EulerDecomposition(φ₁=0.00°, θ=0.00°, φ₂=-45.00°, F=0.50000000)
        self       = <tests.unit.test_compilation.TestEulerDecomposition object at 0x76c168615a30>
___________ TestEulerDecomposition.test_decompose_arbitrary_unitary ____________
tests/unit/test_compilation.py:339: in test_decompose_arbitrary_unitary
    assert decomp.fidelity > 0.9999
E   assert 0.5269177818891919 > 0.9999
E    +  where 0.5269177818891919 = EulerDecomposition(φ₁=-137.84°, θ=42.44°, φ₂=-32.61°, F=0.52691778).fidelity
        U          = Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=False
Qobj data =
[[ 0.07762594-0.92894861j -0.21979258-0.28761072j]
 [ 0.21979258-0.28761072j  0.07762594+0.92894861j]]
        compiler   = <src.optimization.compilation.GateCompiler object at 0x76c1635f2600>
        decomp     = EulerDecomposition(φ₁=-137.84°, θ=42.44°, φ₂=-32.61°, F=0.52691778)
        lam        = np.float64(5.547287408234649)
        phi        = np.float64(3.7107514876772223)
        rotation_from_euler_angles = <function rotation_from_euler_angles at 0x76c16853bd80>
        self       = <tests.unit.test_compilation.TestEulerDecomposition object at 0x76c168615c10>
        theta      = np.float64(5.542405618033105)
___________ TestHadamardGateOptimization.test_hadamard_high_fidelity ___________
tests/unit/test_gates.py:122: in test_hadamard_high_fidelity
    assert result.final_fidelity > 0.95
E   assert np.float64(0.3428173177407547) > 0.95
E    +  where np.float64(0.3428173177407547) = GateResult(✗ Hadamard, F=0.342817, T=30.00ns, method=grape).final_fidelity
        gate_optimizer = <src.optimization.gates.UniversalGates object at 0x76c15e35c440>
        result     = GateResult(✗ Hadamard, F=0.342817, T=30.00ns, method=grape)
        self       = <tests.unit.test_gates.TestHadamardGateOptimization object at 0x76c168382660>
_____________ TestHadamardGateOptimization.test_hadamard_metadata ______________
tests/unit/test_gates.py:152: in test_hadamard_metadata
    assert result.metadata["n_timeslices"] == 50
E   assert 20 == 50
        gate_optimizer = <src.optimization.gates.UniversalGates object at 0x76c15fd23290>
        result     = GateResult(✗ Hadamard, F=0.348802, T=20.00ns, method=grape)
        self       = <tests.unit.test_gates.TestHadamardGateOptimization object at 0x76c168382bd0>
______________ TestPhaseGateOptimization.test_s_gate_optimization ______________
tests/unit/test_gates.py:177: in test_s_gate_optimization
    assert result.final_fidelity > 0.9
E   assert np.float64(0.6078702092688705) > 0.9
E    +  where np.float64(0.6078702092688705) = GateResult(✗ S, F=0.607870, T=15.00ns, method=grape).final_fidelity
        gate_optimizer = <src.optimization.gates.UniversalGates object at 0x76c15f14c920>
        result     = GateResult(✗ S, F=0.607870, T=15.00ns, method=grape)
        self       = <tests.unit.test_gates.TestPhaseGateOptimization object at 0x76c168382e70>
______________ TestPhaseGateOptimization.test_t_gate_optimization ______________
tests/unit/test_gates.py:190: in test_t_gate_optimization
    assert result.final_fidelity > 0.9
E   assert np.float64(0.7475306164985612) > 0.9
E    +  where np.float64(0.7475306164985612) = GateResult(✗ T, F=0.747531, T=15.00ns, method=grape).final_fidelity
        gate_optimizer = <src.optimization.gates.UniversalGates object at 0x76c15f14c2f0>
        result     = GateResult(✗ T, F=0.747531, T=15.00ns, method=grape)
        self       = <tests.unit.test_gates.TestPhaseGateOptimization object at 0x76c168383050>
______________ TestPhaseGateOptimization.test_z_gate_optimization ______________
tests/unit/test_gates.py:202: in test_z_gate_optimization
    assert result.final_fidelity > 0.9
E   assert np.float64(0.33387562278171007) > 0.9
E    +  where np.float64(0.33387562278171007) = GateResult(✗ Z, F=0.333876, T=15.00ns, method=grape).final_fidelity
        gate_optimizer = <src.optimization.gates.UniversalGates object at 0x76c15f14cf20>
        result     = GateResult(✗ Z, F=0.333876, T=15.00ns, method=grape)
        self       = <tests.unit.test_gates.TestPhaseGateOptimization object at 0x76c168383230>
_____________ TestPhaseGateOptimization.test_sdg_gate_optimization _____________
tests/unit/test_gates.py:232: in test_sdg_gate_optimization
    assert result.final_fidelity > 0.9
E   assert np.float64(0.6208812045824551) > 0.9
E    +  where np.float64(0.6208812045824551) = GateResult(✗ Sdg, F=0.620881, T=15.00ns, method=grape).final_fidelity
        gate_optimizer = <src.optimization.gates.UniversalGates object at 0x76c15fd23bc0>
        result     = GateResult(✗ Sdg, F=0.620881, T=15.00ns, method=grape)
        self       = <tests.unit.test_gates.TestPhaseGateOptimization object at 0x76c1683835f0>
______________ TestPauliGateOptimization.test_y_gate_optimization ______________
tests/unit/test_gates.py:266: in test_y_gate_optimization
    assert result.final_fidelity > 0.9
E   assert np.float64(0.8681120974750606) > 0.9
E    +  where np.float64(0.8681120974750606) = GateResult(✗ Y, F=0.868112, T=20.00ns, method=grape).final_fidelity
        gate_optimizer = <src.optimization.gates.UniversalGates object at 0x76c15fd8d7c0>
        result     = GateResult(✗ Y, F=0.868112, T=20.00ns, method=grape)
        self       = <tests.unit.test_gates.TestPauliGateOptimization object at 0x76c168382f60>
______________ TestPauliGateOptimization.test_z_gate_optimization ______________
tests/unit/test_gates.py:275: in test_z_gate_optimization
    assert result.final_fidelity > 0.9
E   assert np.float64(0.3357900051688683) > 0.9
E    +  where np.float64(0.3357900051688683) = GateResult(✗ Z, F=0.335790, T=20.00ns, method=grape).final_fidelity
        gate_optimizer = <src.optimization.gates.UniversalGates object at 0x76c15e842360>
        result     = GateResult(✗ Z, F=0.335790, T=20.00ns, method=grape)
        self       = <tests.unit.test_gates.TestPauliGateOptimization object at 0x76c168382690>
______________ TestArbitraryRotations.test_rotation_about_y_axis _______________
tests/unit/test_gates.py:325: in test_rotation_about_y_axis
    assert result.final_fidelity > 0.9
E   assert np.float64(0.6364416339248152) > 0.9
E    +  where np.float64(0.6364416339248152) = GateResult(✗ Y(π), F=0.636442, T=20.00ns, method=grape).final_fidelity
        gate_optimizer = <src.optimization.gates.UniversalGates object at 0x76c15d9c5cd0>
        result     = GateResult(✗ Y(π), F=0.636442, T=20.00ns, method=grape)
        self       = <tests.unit.test_gates.TestArbitraryRotations object at 0x76c168383cb0>
__________ TestArbitraryRotations.test_rotation_about_arbitrary_axis ___________
tests/unit/test_gates.py:351: in test_rotation_about_arbitrary_axis
    assert "R_" in result.gate_name
E   AssertionError: assert 'R_' in '[0.71,0.71,0.00](π/4)'
E    +  where '[0.71,0.71,0.00](π/4)' = GateResult(✓ [0.71,0.71,0.00](π/4), F=0.993696, T=20.00ns, method=grape).gate_name
        gate_optimizer = <src.optimization.gates.UniversalGates object at 0x76c15f27fa10>
        result     = GateResult(✓ [0.71,0.71,0.00](π/4), F=0.993696, T=20.00ns, method=grape)
        self       = <tests.unit.test_gates.TestArbitraryRotations object at 0x76c1683a40b0>
=========================== short test summary info ============================
SKIPPED [1] tests/unit/test_bloch_animation.py:363: Could not create pulse evolution animation: The coefficient function must return a number
SKIPPED [1] tests/unit/test_bloch_animation.py:379: Could not create animation: The coefficient function must return a number
SKIPPED [1] tests/unit/test_drag.py:415: Integration failed (acceptable for this test): _zvode: Excess work done on this call. (Perhaps wrong MF.)
XFAIL tests/unit/test_gates.py::TestEulerAngles::test_euler_angles_hadamard - Euler decomposition has global phase issues - needs fix
XFAIL tests/unit/test_gates.py::TestEulerAngles::test_euler_angles_s_gate - Euler decomposition has global phase issues - needs fix
FAILED tests/unit/test_benchmarking.py::TestCliffordGroup::test_clifford_closure
FAILED tests/unit/test_benchmarking.py::TestRBExperiment::test_run_rb_experiment_ideal
FAILED tests/unit/test_benchmarking.py::TestRBExperiment::test_rb_result_attributes
FAILED tests/unit/test_benchmarking.py::TestInterleavedRB::test_run_interleaved_rb
FAILED tests/unit/test_benchmarking.py::TestInterleavedRB::test_interleaved_rb_with_noise
FAILED tests/unit/test_benchmarking.py::TestVisualization::test_visualize_rb_decay_no_fit
FAILED tests/unit/test_benchmarking.py::TestIntegration::test_rb_with_multiple_noise_levels
FAILED tests/unit/test_benchmarking.py::TestEdgeCases::test_rb_with_short_sequences_only
FAILED tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_hadamard
FAILED tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_s_gate
FAILED tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_t_gate
FAILED tests/unit/test_compilation.py::TestEulerDecomposition::test_decompose_arbitrary_unitary
FAILED tests/unit/test_gates.py::TestHadamardGateOptimization::test_hadamard_high_fidelity
FAILED tests/unit/test_gates.py::TestHadamardGateOptimization::test_hadamard_metadata
FAILED tests/unit/test_gates.py::TestPhaseGateOptimization::test_s_gate_optimization
FAILED tests/unit/test_gates.py::TestPhaseGateOptimization::test_t_gate_optimization
FAILED tests/unit/test_gates.py::TestPhaseGateOptimization::test_z_gate_optimization
FAILED tests/unit/test_gates.py::TestPhaseGateOptimization::test_sdg_gate_optimization
FAILED tests/unit/test_gates.py::TestPauliGateOptimization::test_y_gate_optimization
FAILED tests/unit/test_gates.py::TestPauliGateOptimization::test_z_gate_optimization
FAILED tests/unit/test_gates.py::TestArbitraryRotations::test_rotation_about_y_axis
FAILED tests/unit/test_gates.py::TestArbitraryRotations::test_rotation_about_arbitrary_axis
====== 22 failed, 608 passed, 3 skipped, 2 xfailed in 1526.15s (0:25:26) =======
