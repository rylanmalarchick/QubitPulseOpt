[pytest]
# Pytest configuration for QubitPulseOpt

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum version
minversion = 7.0

# Add current directory to Python path
pythonpath = .

# Console output options
addopts =
    -ra
    --strict-markers
    --strict-config
    --showlocals
    --tb=short

# Coverage options (when using --cov)
# addopts = --cov=src --cov-report=html --cov-report=term-missing

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    fast: marks tests as fast (default)
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    optimization: marks tests that run optimization algorithms
    visualization: marks tests for visualization components
    benchmark: marks benchmarking tests
    requires_gpu: marks tests that require GPU acceleration
    parametric: marks parametric/property-based tests
    stochastic: marks tests with stochastic behavior (may need multiple runs)
    flaky: marks tests that are known to be flaky (will be retried automatically)
    deterministic: marks tests that should always produce the same result
    statistical: marks tests that perform statistical ensemble testing

# Warnings
filterwarnings =
    error
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning:qutip.*
    ignore::UserWarning:matplotlib.*

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (optional, requires pytest-timeout)
# timeout = 300
# timeout_method = thread

# Parallel execution settings (requires pytest-xdist)
# Run with: pytest -n auto
# addopts = -n auto

# Cache
cache_dir = .pytest_cache

# Ignore paths
norecursedirs =
    .git
    .tox
    dist
    build
    *.egg
    venv
    env
    __pycache__
    .pytest_cache
    .mypy_cache
    docs
    notebooks
    examples
    data
    agent_logs

# pytest-rerunfailures configuration
# Tests marked with @pytest.mark.flaky(reruns=N) will auto-retry
# To enable global reruns: pytest --reruns 2 --reruns-delay 1

# Test selection shortcuts
# Fast tests (deterministic only): pytest -m "not stochastic and not slow"
# All unit tests: pytest -m "not statistical and not slow"
# Full suite with retries: pytest --reruns 2
# Full suite: pytest
